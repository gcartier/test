(manifest jazz.ui.command.Command-Text-View

  (version 207012)
  (digest "36a1f9e8d148c3efd97e4a22f69af2ffb76da60c")
  (references (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.ide.application.IDE-Text-View IDE-Text-View)
              (jazz.io File (Pathname anchorize) set-current-directory tokenise-filename)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception signal-cancel)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional /= Object-Class (Sequence sequence-cardinality) (Sequence sequence-element) (Sequence sequence-last) alphanumeric? between? cardinality collect compare-n downcase element empty-string? find find-if first for-each-reversed is-not? last make-search-context memv? nu+ nu=? second starts-with? string-find)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) Range Range$Cell$ cell=?)
              (jazz.language.runtime.kernel continuation-capture continuation-return current-directory directory-content enqueue file-exists? is? iterate-table-safe new new-queue pathname-normalize pathname-type queue-list table-clear unspecified)
              (jazz.language.runtime.object Object (Object initialize) (Object object-downcase))
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros unless when)
              (jazz.language.syntax.typecase typecase)
              (jazz.library.component.Component (Component creator))
              (jazz.literals construct-cell)
              (jazz.project get-workbench)
              (jazz.system clear-user-message get-preferences user-message)
              (jazz.system.access get-application)
              (jazz.ui find-actions in-cell-edit?)
              (jazz.ui.document.Document Document (Document get-document-controller))
              (jazz.ui.hosting.Host-View Host-View (Host-View get-guest))
              (jazz.ui.outline.Outline-View (Outline-View finish) (Outline-View get-model) (Outline-View model))
              (jazz.ui.search make-text-search-result)
              (jazz.ui.search.Replace Replace)
              (jazz.ui.text.Code-Text-View (Code-Text-View auto-complete?) (Code-Text-View completion-name) (Code-Text-View focus-actions) (Code-Text-View install) (Code-Text-View preferences) (Code-Text-View symbol-completions) (Code-Text-View tab-press))
              (jazz.ui.text.Text-Highlight Text-Highlight)
              (jazz.ui.text.Text-Style Text-Style)
              (jazz.ui.text.Text-View Text-View (Text-View add-style) (Text-View auto-complete-char?) (Text-View backspace-press) (Text-View complete-name?) (Text-View favorite-completions?) (Text-View first-paragraph) (Text-View focus-lose) (Text-View get-caret) (Text-View get-constituent-test) (Text-View insert-styled) (Text-View key-press) (Text-View next-page) (Text-View on-downcase-selection) (Text-View on-upcase-selection) (Text-View prior-page) (Text-View remove-all-highlights) (Text-View select-all) (Text-View set-caret) (Text-View set-selection) (Text-View text-ending) (Text-View~Class get-class-form) (Text-View~Class get-class-forms) (Text-View~Class set-class-form))
              (jazz.ui.view all-frames collect-frames collect-palettes current-document current-frame delete-other-stages delete-stage get-focus message-box pop-focus push-focus refresh-focus-actions split-stage-horizontally split-stage-vertically)
              (jazz.ui.view.View View (View component-alias) (View get-title))
              (jazz.ui.window.Window Window (Window get-title))
              (scheme.language.runtime.kernel + - = >= append car cdr char-ci=? cons eq? equal? eqv? for-each iterate-table length list list->table make-table modulo not null? string-append string-ci=? string-length string-ref substring table-ref table-set! values)
              (scheme.syntax declaration-path)))
