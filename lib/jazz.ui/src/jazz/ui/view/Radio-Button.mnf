(manifest jazz.ui.view.Radio-Button

  (version 207012)
  (digest "2dc1d2dd5d5b6ff1c03e9568d88829e0733a238b")
  (references (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Boolean-Domain Boolean-Domain)
              (jazz.designer.domain.Color-Domain Color-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.geometry in-rect?)
              (jazz.graphic.Color Color (Color determine-color))
              (jazz.graphic.literals construct-color)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.functional Object-Class empty-string? getf neq?)
              (jazz.language.runtime.geometry Dimension Rect)
              (jazz.language.runtime.kernel continuation-capture continuation-return is? new)
              (jazz.language.syntax.macros submodule when)
              (jazz.library.component.Component (Component parent))
              (jazz.literals construct-dimension)
              (jazz.locale localize)
              (jazz.ui.tree.Tree-View Tree-View (Tree-View get-selection-mode) (Tree-View selection-color))
              (jazz.ui.view.Drawing (Drawing draw) (Drawing get-height) (Drawing get-width))
              (jazz.ui.view.Groupable Groupable)
              (jazz.ui.view.Selectable Selectable)
              (jazz.ui.view.View View (View acquire-capture) (View arrow-press) (View default-size) (View drag-move) (View drag-up) (View effective-font) (View escape-press) (View focus-gained) (View focus-lost) (View invalidate-view) (View key-press) (View mouse-down) (View outline-column) (View outline-select) (View outline-view) (View over-view?) (View preferred-size) (View process-action) (View release-capture) (View return-press) (View set-modified?) (View title) (View view-enabled?) View-Descriptor (View-Descriptor~Class get-class-form) (View-Descriptor~Class get-class-forms) (View-Descriptor~Class set-class-form) (View~Class get-class-descriptor))
              (scheme.language.runtime.kernel + - cons eq? eqv? for-each list list->table max not quotient)
              (scheme.syntax declaration-path)))
