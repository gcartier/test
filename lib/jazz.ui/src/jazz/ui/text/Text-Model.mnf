(manifest jazz.ui.text.Text-Model

  (version 207012)
  (digest "3fd5a839b43ef5144771494928c51773dda20e1e")
  (references (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Boolean-Domain Boolean-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.geometry position/size->rect)
              (jazz.graphic registered-color registered-font)
              (jazz.graphic.Color Color)
              (jazz.graphic.font.Font Font)
              (jazz.graphic.literals construct-color construct-font)
              (jazz.io path-settings)
              (jazz.jml construct-form form->node get-class-form-with-origin locators-ref parse-jml transform-jml)
              (jazz.jml.model.JML-Node JML-Node)
              (jazz.jml.model.JML-Text JML-Text (JML-Text get-text))
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->search-set /= Axis (Axis get-content) (Axis get-size) (Class coerce-object) List List-Factory (List-Factory get-output) (List-Factory put) (List-Factory put-sequence) Object-Class Search-Context Search-Set (Search-Set get-contexts) (Sequence sequence-cardinality) (Sequence sequence-element) (Sequence sequence-last) accumulate alphanumeric? cardinality category-identifier coerce element empty-string? first for-each-property get-rank getf iterate join-lines last make-search-context memq? naturals null/pair? read-string-element regular-search regular-search-all remove search some? split-lines subseq subseq! subseq!string)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) (Cell increase-col) (Cell increase-line) (Cell set-col) (Cell set-line) Dimension (Dimension get-width) Distance (Point get-v) Range$Cell$ (Range$Cell$ get-end) (Range$Cell$ get-start) (Range$Cell$ inside?) Rect)
              (jazz.language.runtime.kernel class-of continuation-capture continuation-return dispatch enqueue is? jazz-readtable new new-queue not-null? queue-list require-service unspecified walk-for with-jazz-readtable)
              (jazz.language.runtime.object Object copy)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.bind-optionals bind-optionals)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros prog1 submodule unless when while ~)
              (jazz.language.syntax.typecase typecase)
              (jazz.library.component.Component (Component install-child) (Component locate) (Component prepare) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.exemplar Exemplar-Domain register-exemplar)
              (jazz.library.utility.Undoer Undoer (Undoer can-redo?) (Undoer can-undo?) (Undoer redo) (Undoer register-undo) (Undoer reset-save-depth) (Undoer undo))
              (jazz.system.access get-application)
              (jazz.ui formats-domain styles-domain)
              (jazz.ui.document.Document-Moniker Document-Moniker)
              (jazz.ui.layout.Figure (Figure get-position))
              (jazz.ui.outline.Outline-Model Outline-Model (Outline-Model finish) (Outline-Model for-each-client) (Outline-Model get-content) (Outline-Model get-row) (Outline-Model invalidate-update) (Outline-Model left-padding) (Outline-Model root-row) (Outline-Model scrollee-content-width) (Outline-Model scrollee-height) (Outline-Model scrollee-width) (Outline-Model set-content) (Outline-Model single-client) (Outline-Model update-displayed-from) (Outline-Model visible-count) (Outline-Model visible-height) (Outline-Model visible-width) (Outline-Model~Class get-class-descriptor))
              (jazz.ui.outline.Outline-Row (Outline-Row get-next) (Outline-Row get-row-height) (Outline-Row set-father) (Outline-Row set-level) (Outline-Row set-parent) (Outline-Row set-previous) (Outline-Row set-row-height))
              (jazz.ui.outline.Outline-View Outline-View-Descriptor (Outline-View-Descriptor~Class get-class-form) (Outline-View-Descriptor~Class get-class-forms) (Outline-View-Descriptor~Class set-class-form))
              (jazz.ui.outline.Outline-View-Old (Outline-View-Old add-row))
              (jazz.ui.skin find-look)
              (jazz.ui.syntax.Text-Syntax Text-Syntax)
              (jazz.ui.text.Format Format (Format get-keep-with-next?))
              (jazz.ui.text.Formatted-Text Formatted-Text (Formatted-Text get-formats) (Formatted-Text get-styles))
              (jazz.ui.text.Formatted-Text-Model Formatted-Text-Model)
              (jazz.ui.text.Formatted-Text-View Formatted-Text-View)
              (jazz.ui.text.Image-Style Image-Style)
              (jazz.ui.text.Line Line (Line contour-width) (Line get-height) (Line set-height))
              (jazz.ui.text.Link-Style Link-Style)
              (jazz.ui.text.Paragraph Paragraph (Paragraph compute-width) (Paragraph get-format) (Paragraph get-length) (Paragraph get-line) (Paragraph get-line-at) (Paragraph get-lines) (Paragraph get-run) (Paragraph get-runs) (Paragraph get-string) (Paragraph range-runs) (Paragraph remove-coloring) (Paragraph replace-beginning) (Paragraph replace-ending) (Paragraph replace-range) (Paragraph set-format) (Paragraph set-runs) (Paragraph set-string))
              (jazz.ui.text.Run Run (Run get-style))
              (jazz.ui.text.Style Style)
              (jazz.ui.text.Table-Border Table-Border)
              (jazz.ui.text.Text Text (Text get-paragraphs))
              (jazz.ui.text.Text-Colorizer Text-Colorizer)
              (jazz.ui.text.Text-Explorer Text-Explorer (Text-Explorer backward-until) (Text-Explorer forward-until) (Text-Explorer get-end) (Text-Explorer get-start))
              (jazz.ui.text.Text-Style Text-Style)
              (jazz.ui.text.Text-Transformation Text-Transformation)
              (jazz.ui.text.Text-View (Text-View dynamic-scrollee-width?))
              (jazz.ui.text.View-Style View-Style (View-Style get-view))
              (jazz.ui.tree.Tree-Label-Column Tree-Label-Column)
              (jazz.ui.tree.Tree-Node-Column Tree-Node-Column)
              (jazz.ui.tree.Tree-View Tree-View)
              (jazz.ui.view new-frame)
              (jazz.ui.view.Drawing (Drawing get-bottom) (Drawing get-height) (Drawing get-size) (Drawing get-width) (Drawing set-height))
              (jazz.ui.view.View View (View call-content-change) (View can-redo?) (View can-undo?) (View content-size-change) (View dynamic-scrollee?) (View dynamic-set-scrollee-size) (View get-display-width) (View get-drawing-background) (View get-look) (View get-modified?) (View get-print-area) (View invalidate-view) (View layout-scrollee) (View modified?) (View redo) (View restore-printing) (View save-to) (View set-modified?) (View set-size) (View setup-printing) (View undo) (View update-locked?) (View view-enabled?) (View with-update-locked))
              (scheme.language.runtime.kernel * + - < <= = > >= apply call-with-input-file call-with-output-file car cdr cons eq? for-each get-output-string length list list->table map max not null? open-output-string quotient read string string? substring symbol?)
              (scheme.syntax declaration-path)))
