(manifest jazz.ui.text.Paragraph

  (version 207012)
  (digest "d48778d469fba8f46ee78e60a7ab8dc6d1639d38")
  (references (jazz.geometry center justify offset-rect)
              (jazz.graphic.Color Color)
              (jazz.graphic.Rectangles-Region (Rectangles-Region combine-or!))
              (jazz.graphic.literals construct-color)
              (jazz.graphic.platform.glfw.Region Region)
              (jazz.language.runtime.functional /= List-Factory (List-Factory get-output) (List-Factory put) (List-Factory reset) Object-Class (Sequence sequence-cardinality) (Sequence sequence-last) (Subseq$string$ print-content) append! cardinality element for-each-reversed fxround fxround/ grow-subseq! grow-subseq!Subseq$string$ last neq? percent replace-subseq! replace-subseq!string subseq! subseq!string)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) (Dimension get-height) Point (Point get-h) (Point get-v) Range Rect)
              (jazz.language.runtime.kernel continuation-capture continuation-return is? new not-null? unspecified)
              (jazz.language.runtime.object Object (Object close) print-unreadable)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros when while)
              (jazz.language.syntax.with with)
              (jazz.library.component.Component (Component parent) (Component print))
              (jazz.library.exemplar (Exemplar extend) (Exemplar supports?))
              (jazz.ui for-each-run)
              (jazz.ui.layout.Figure (Figure position) (Figure size))
              (jazz.ui.outline.Outline-Row Outline-Row (Outline-Row draw) (Outline-Row row-height))
              (jazz.ui.text.Format Format (Format get-background) (Format get-bullet-inside) (Format get-bullet-outside) (Format get-bulleted?) (Format get-justification) (Format get-left-margin) (Format get-right-margin))
              (jazz.ui.text.Line Line (Line col->text) (Line col->view) (Line col->view-strict) (Line draw-line) (Line get-bottom) (Line get-height) (Line get-length) (Line get-offset) (Line get-top) (Line range-region) (Line view->col))
              (jazz.ui.text.Run Run (Run compute-width) (Run get-length) (Run get-string) (Run get-style) (Run height-update) (Run set-string) (Run set-style) (Run wrap))
              (jazz.ui.text.Style Style (Style propagate?))
              (jazz.ui.text.Text-Model Text-Model (Text-Model get-default-style) (Text-Model get-paragraph-spacing) (Text-Model get-propagate-styles?) (Text-Model get-tabs) (Text-Model intern-style))
              (jazz.ui.text.Text-Style Text-Style (Text-Style get-color))
              (jazz.ui.text.View-Style View-Style (View-Style get-view))
              (jazz.ui.view.Drawing (Drawing get-height) (Drawing get-width) (Drawing set-size))
              (scheme.language.runtime.kernel + - < <= = > >= car cdr cons dynamic-wind eq? eqv? for-each get-output-string list max min not null? open-output-string set-cdr! write)))
