(manifest jazz.ui.tree.Tree-Column

  (version 207012)
  (digest "10649075d77680bdac3ad9a48bfb6db6b3f6ed66")
  (references (jazz.designer.descriptor.Component-Descriptor Component-Descriptor (Component-Descriptor~Class get-class-form) (Component-Descriptor~Class get-class-forms) (Component-Descriptor~Class set-class-form))
              (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Localized-Domain Localized-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.geometry expand-rect inflate-rect inflate-rectRectfxfx justify-lazy)
              (jazz.graphic debug-paint?)
              (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional Object-Class getf memv? neq? some?)
              (jazz.language.runtime.geometry Cell Dimension Point Rect)
              (jazz.language.runtime.kernel is? new unspecified)
              (jazz.language.runtime.object print-unreadable)
              (jazz.language.syntax.macros submodule unless when)
              (jazz.library.component.Component Component (Component finish) (Component get-visible?) (Component initialized?) (Component name) (Component parent) (Component print) (Component set-parent) (Component set-visible?) (Component~Class get-class-descriptor))
              (jazz.library.literals construct-image-resource construct-locales)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.locale Locales localize)
              (jazz.ui Site)
              (jazz.ui.tree.Tree-Data Tree-Data (Tree-Data get-background) (Tree-Data get-frame-color))
              (jazz.ui.view cycle-debug-color!)
              (jazz.ui.view.Drawing (Drawing set-rect))
              (jazz.ui.view.View View (View set-position) (View set-size))
              (scheme.language.runtime.kernel + - = cons eq? list list->table not pair? values)
              (scheme.syntax declaration-path)))
