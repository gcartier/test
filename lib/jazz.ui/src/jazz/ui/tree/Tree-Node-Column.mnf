(manifest jazz.ui.tree.Tree-Node-Column

  (version 207012)
  (digest "31cfd3b27e2344cbc148adc9d59860b8d64a7bfa")
  (references (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.graphic debug-paint?)
              (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.functional /= Object-Class fxround/ getf neq?)
              (jazz.language.runtime.geometry Dimension Point Rect)
              (jazz.language.runtime.kernel class-of dispatch is? new unspecified)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros submodule unless when ~)
              (jazz.library.component.Component (Component parent))
              (jazz.library.literals construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.locale localize)
              (jazz.ui.tree.Tree-Column (Tree-Column cell-selected?) (Tree-Column column-mouse-down) (Tree-Column content-h) (Tree-Column double-click) (Tree-Column draw-background) (Tree-Column draw-data) (Tree-Column find-part) (Tree-Column get-debugged) (Tree-Column header-title-offset) (Tree-Column layout-cell))
              (jazz.ui.tree.Tree-Label-Column Tree-Label-Column (Tree-Label-Column cell-class) (Tree-Label-Column cell-color) (Tree-Label-Column draw-title) (Tree-Label-Column text-h) (Tree-Label-Column title-position) (Tree-Label-Column~Class get-class-descriptor) Tree-Label-Descriptor (Tree-Label-Descriptor~Class get-class-form) (Tree-Label-Descriptor~Class get-class-forms) (Tree-Label-Descriptor~Class set-class-form))
              (jazz.ui.tree.Tree-Node Tree-Node)
              (jazz.ui.view cycle-debug-color!)
              (jazz.ui.view.View View (View set-position) (View set-size))
              (scheme.language.runtime.kernel * + - < <= = > >= apply cons eq? even? list list->table min not odd? pair? values)
              (scheme.syntax declaration-path)))
