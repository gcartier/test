(manifest jazz.ui.tree.Tree-View

  (version 207012)
  (digest "890e7bde8f416ef336895c00761d93cb393cdd2c")
  (references (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Boolean-Domain Boolean-Domain)
              (jazz.designer.domain.Enumeration-Domain Enumeration-Domain)
              (jazz.designer.domain.Integer-Domain Integer-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.geometry inflate-rect offset-rect rect-end-position rect-height rect-position rect-width)
              (jazz.graphic debug-paint?)
              (jazz.graphic.Color Color)
              (jazz.graphic.Rectangles-Region (Rectangles-Region combine-and!) (Rectangles-Region combine-or!))
              (jazz.graphic.Surface Surface (Surface with-clipping-transformation))
              (jazz.graphic.image.Portfolio Portfolio)
              (jazz.graphic.image.Portfolio-Domain Portfolio-Domain)
              (jazz.graphic.literals construct-color)
              (jazz.graphic.platform.glfw.Region Region)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format format-plural)
              (jazz.language.runtime.functional ->string /= List-Factory (List-Factory get-output) (List-Factory put) Object-Class (Sequence sequence-cardinality) (Sequence sequence-element) (Sequence sequence-last) (Sequence sequence-set-element!) (Sequence sequence-tail) alphanumeric? append! box-list cardinality collect contiguous-range element empty-table every? find find-if find-keyword first for-each-reversed fxround/ identity iota iterate join last member? memq? naturals neq? nu+ nu- nu=? remove remove! remove-false second set-element! some? sort split-lines tail unbox-list)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) Dimension (Dimension get-height) (Dimension get-width) Point (Point get-h) (Point get-v) Rect (Rect get-bottom) (Rect get-left) (Rect get-right) (Rect get-top) cell=? point+)
              (jazz.language.runtime.kernel class-of continuation-capture continuation-return dispatch enqueue is? new new-queue not-null? queue-list table-clear unspecified)
              (jazz.language.runtime.object Object (Object close) (Object initialize) (Object object-alphanumeric?) (Object print) print-unreadable)
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.bind-keywords bind-keywords)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros submodule unless when while ~)
              (jazz.language.syntax.typecase typecase)
              (jazz.language.syntax.with with)
              (jazz.library.component component-descendant-value-list)
              (jazz.library.component.Component (Component add-child) (Component child) (Component destroying?) (Component find-component) (Component get-children) (Component get-finished?) (Component get-name) (Component get-parent) (Component get-surrogate) (Component parent) (Component prepare) (Component remove-child) (Component set-children) (Component set-visible?) (Component validate-component) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.integrity.Integrity-Violation Integrity-Violation)
              (jazz.library.literals construct-image-resource construct-reference)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.library.utility.Locator Locator (Locator initialize) (Locator iterate) (Locator prefix) (Locator select))
              (jazz.library.utility.Reference Reference)
              (jazz.literals construct-point construct-rect)
              (jazz.locale localize)
              (jazz.system sort-predicates)
              (jazz.ui Site (Site get-column) (Site get-row) find-actions inhibit-scrollee-layouts? invoke-handler min-column-width redrawn-merge-cells site-hash site=?)
              (jazz.ui.layout.Figure (Figure get-position))
              (jazz.ui.outline.Outline-View-Old Outline-View-Old (Outline-View-Old add-empty-row) (Outline-View-Old add-row) (Outline-View-Old added-update-selection) (Outline-View-Old call-with-v->line) (Outline-View-Old collapse) (Outline-View-Old collapse-all) (Outline-View-Old collapse-selection) (Outline-View-Old collect-rows) (Outline-View-Old collect-visible-rows) (Outline-View-Old default-row-height) (Outline-View-Old double-click) (Outline-View-Old draw-children) (Outline-View-Old draw-empty) (Outline-View-Old draw-outline) (Outline-View-Old ensure-displayed) (Outline-View-Old ensure-expanded) (Outline-View-Old ensure-row-displayed) (Outline-View-Old expand) (Outline-View-Old expand-all) (Outline-View-Old expand/collapse) (Outline-View-Old find-subdrawing) (Outline-View-Old finish) (Outline-View-Old fit-to-scroller?) (Outline-View-Old for-each-row) (Outline-View-Old for-each-visible-row) (Outline-View-Old get-content) (Outline-View-Old get-expand-state) (Outline-View-Old get-row) (Outline-View-Old get-row-count) (Outline-View-Old get-scroll-context) (Outline-View-Old get-selection) (Outline-View-Old get-visible-count) (Outline-View-Old get-visible-row) (Outline-View-Old invalidate-collapse) (Outline-View-Old invalidate-columns) (Outline-View-Old invalidate-expand) (Outline-View-Old invalidate-selection) (Outline-View-Old line-draw-selected?) (Outline-View-Old line-rect) (Outline-View-Old line-selected?) (Outline-View-Old mouse-down) (Outline-View-Old remove-every-row) (Outline-View-Old remove-row) (Outline-View-Old removed-update-selection) (Outline-View-Old root-row) (Outline-View-Old row->line) (Outline-View-Old row-class) (Outline-View-Old row-spacing) (Outline-View-Old row-title) (Outline-View-Old row-top) (Outline-View-Old scroll-invalidate) (Outline-View-Old scrollee-width) (Outline-View-Old selection) (Outline-View-Old selection-region) (Outline-View-Old selection-row-rect) (Outline-View-Old selection-row-region) (Outline-View-Old set-content) (Outline-View-Old set-expand-state) (Outline-View-Old set-selection) (Outline-View-Old update-father-control) (Outline-View-Old update-row) (Outline-View-Old update-visible) (Outline-View-Old update-visible-width-incremental) (Outline-View-Old v->line) (Outline-View-Old visible-count) (Outline-View-Old visible-height) (Outline-View-Old visible-width) Outline-View-Old-Descriptor (Outline-View-Old-Descriptor~Class get-class-form) (Outline-View-Old-Descriptor~Class get-class-forms) (Outline-View-Old-Descriptor~Class set-class-form) (Outline-View-Old~Class get-class-descriptor))
              (jazz.ui.selection.Selection-Manager Selection-Manager)
              (jazz.ui.selection.Selection-Provider Selection-Provider)
              (jazz.ui.skin find-look)
              (jazz.ui.tree.Tree-Column Tree-Column (Tree-Column set-borders) (Tree-Column set-width))
              (jazz.ui.tree.Tree-Data-View Tree-Data-View (Tree-Data-View get-preserved-data))
              (jazz.ui.tree.Tree-Drag-Source Tree-Drag-Source)
              (jazz.ui.tree.Tree-Drop-Target Tree-Drop-Target (Tree-Drop-Target get-col) (Tree-Drop-Target get-part) (Tree-Drop-Target get-row))
              (jazz.ui.tree.Tree-Header Tree-Header)
              (jazz.ui.tree.Tree-Highlight Tree-Highlight)
              (jazz.ui.tree.Tree-Label Tree-Label (Tree-Label get-title) (Tree-Label set-title))
              (jazz.ui.tree.Tree-Label-Column Tree-Label-Column)
              (jazz.ui.tree.Tree-Node-Column Tree-Node-Column (Tree-Node-Column text-h))
              (jazz.ui.tree.Tree-Path-Column Tree-Path-Column)
              (jazz.ui.tree.Tree-Row Tree-Row)
              (jazz.ui.view cycle-debug-color! frame-region mouse-down-point)
              (jazz.ui.view.Drawing (Drawing acquire) (Drawing find-in-drawing) (Drawing get-height) (Drawing get-view-clipper) (Drawing get-width) (Drawing set-rect) (Drawing view-visible?) (Drawing with-transformation-surface))
              (jazz.ui.view.Tooltip-Context Tooltip-Context)
              (jazz.ui.view.View View (View acquire-capture) (View acquire-focus) (View allow-start-drag?) (View arrow-press-handler) (View call-double-click) (View call-selection-handler) (View contains-focus?) (View context-menu) (View current-drop) (View cursor-update) (View destroy-component) (View down-arrow-press) (View drag-move) (View drag-up) (View effective-font) (View focus-actions) (View focus-delegate) (View focus-gained) (View focus-lost) (View get-display-size) (View get-display-width) (View get-drag-drop) (View get-drag-image) (View get-drag-position) (View get-drag-source) (View get-drawing-background) (View get-formatted-tooltip?) (View get-look) (View get-outline-view) (View get-scrolled-position) (View get-tooltip-bounds) (View get-tooltip-context) (View get-tooltip-text) (View get-tooltip?) (View get-view-state) (View has-focus?) (View highlight-drop) (View horizontal-scroll-needed) (View invalidate-rect) (View invalidate-region) (View invalidate-view) (View is-focused?) (View key-press) (View layout-scrollee) (View left-arrow-press) (View mouse-data) (View player) (View process-action) (View release-capture) (View right-arrow-press) (View scroll) (View scroll-needed) (View scroll-to) (View scroller) (View select-all) (View set-view-state) (View tab-stop-enter) (View track-popup-menu) (View unhighlight-drop) (View up-arrow-press) (View update-locked?) (View update-view) (View vertical-scroll-needed) (View view-enabled?) (View with-context-click) (View with-update-locked) (View-Descriptor component-get-categorized-addable-classes))
              (jazz.ui.window.platform.glfw set-cursor)
              (scheme.language.runtime.kernel + - / < <= = > >= apply assq car cdr cons dynamic-wind eq? equal? eqv? for-each integer? iterate-table length list list->table make-table map max min modulo not null? pair? quotient set-cdr! table-ref table-set! values)
              (scheme.syntax declaration-path)))
