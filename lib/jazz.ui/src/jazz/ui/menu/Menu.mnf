(manifest jazz.ui.menu.Menu

  (version 207012)
  (digest "c50097c51c1a0a19f75efd07a5ffd95e676026fc")
  (references (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.functional Object-Class (Sequence sequence-cardinality) (Sequence sequence-element) (Sequence sequence-last) box-list cardinality collect-if collect-type element find-keyword first get-rank last memq? next-element previous-element unbox-list)
              (jazz.language.runtime.geometry Dimension Point)
              (jazz.language.runtime.kernel class-of dispatch is? new not-null? unspecified)
              (jazz.language.syntax.bind-keywords bind-keywords)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros when ~)
              (jazz.library.component.Component (Component children) (Component get-finished?) (Component inner?) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.utility.Locator Locator (Locator initialize) (Locator iterate) (Locator prefix) (Locator select))
              (jazz.literals construct-dimension)
              (jazz.locale localize)
              (jazz.ui find-actions)
              (jazz.ui.menu.Item Item)
              (jazz.ui.menu.Menubar Menubar)
              (jazz.ui.menu.Separator-Item Separator-Item)
              (jazz.ui.view close-all-popups close-popup get-focus)
              (jazz.ui.view.Drawing (Drawing for-each-view))
              (jazz.ui.view.View View (View conclude) (View down-arrow-press) (View escape-press) (View focus-actions) (View focus-lose) (View get-player) (View invalidate-update) (View key-press) (View left-arrow-press) (View player) (View return-press) (View right-arrow-press) (View set-size) (View up-arrow-press))
              (scheme.language.runtime.kernel + < > apply cons eq? for-each list list->table max modulo not values)
              (scheme.syntax declaration-path)))
