(manifest jazz.library.component.Component

  (version 207012)
  (digest "5be624fce148ac9da09fa1272c436c12904a9ffd")
  (references (jazz.io Unknown-Alias-Exception file?)
              (jazz.jml.model.JML-Node (JML-Node append-parent))
              (jazz.language.runtime.exception call-with-catch error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string (Class get-instance-slots) (Class mop-instance-slots) Integer List-Factory (List-Factory get-output) (List-Factory put) Object-Class Sequence (Sequence sequence-element) (Sequence sequence-last) append! box-list category-name collect-duplicates collect-if collect-type element find find-if find-keyword first flatten getf insert! is-not? keyword->symbol last mask-bit-set mask-bit-set? memq? move-to-head! move-to-tail! neq? property-field property? read-property remove remove! search second some? unbox-list)
              (jazz.language.runtime.kernel boolean category-field class-of compose-identifier continuation-capture continuation-return dispatch is? listify module-ref new not-null? property-getter property-setter resolve-runtime-reference table-clear unimplemented unspecified)
              (jazz.language.runtime.object Object (Object call-print) (Object close) (Object destroy) (Object destroyed?) (Object destroying?) (Object initialize) (Object initialized?) (Object print) print-unreadable)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.bind-keywords bind-keywords)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros catch unless when while ~)
              (jazz.library find-process get-descriptor get-properties-descriptor resolve-trait)
              (jazz.library.component current-tag-reference-chain instantiate-file registered-file-form tag-reference-not-found-handler)
              (jazz.library.component.Branch Branch (Branch get-branch) (Branch get-trait))
              (jazz.library.component.Form Form (Form resolve-model))
              (jazz.library.component.Trait Trait)
              (jazz.library.consumer.Event-Consumer Event-Consumer)
              (jazz.library.integrity.Integrity-Violation Integrity-Violation)
              (jazz.library.path.Path Path)
              (jazz.locale localize)
              (scheme.language.runtime.kernel + - = > >= apply cadr car cddr cdr cons eq? equal? for-each integer? length list list->table list? make-table map modulo not null? pair? set-car! string? symbol? table-ref table-set! values)))
