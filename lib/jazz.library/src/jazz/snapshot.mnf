(manifest jazz.snapshot

  (version 207012)
  (digest "1d592adef89aa48f188650c166d2301593225bea")
  (references (jazz.debuggee break-internal get-thread-stops using-debugger?)
              (jazz.editor.jazz.inspector inspect-value package-info)
              (jazz.io Directory path-settings timestamped-file)
              (jazz.io.literals construct-directory)
              (jazz.language.runtime.debug console get-continuation-name)
              (jazz.language.runtime.exception error with-system-exception-debugger)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string (Sequence sequence-last) atom? box-list find-keyword first fourth last neq? new-thread present-thread-state second sort third top-threads unbox-list)
              (jazz.language.runtime.kernel continuation-capture continuation? current-process-name current-process-present current-thread disable-interrupts! enable-interrupts! exception-detail exception-reason exit force-output get-continuation-lexical-environment get-continuation-location get-continuation-stack make-mutex mutex-lock! mutex-unlock! not-null? object->serial serial->object specified? thread-continuation thread-name thread-state unspecified with-exception-catcher with-exception-filter)
              (jazz.language.runtime.object Object)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.bind-keywords bind-keywords)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros prog1 unless when)
              (jazz.library.literals construct-locales)
              (jazz.library.syntax define-setting)
              (jazz.locale Locales localize)
              (jazz.platform.glfw current-process-id system-message)
              (jazz.system.access get-process)
              (scheme.language.runtime.kernel - < > append apply call-with-output-file car cdr cons eqv? for-each make-table map not null? procedure? string-length table->list table-ref table-set!)
              (time present-date system-date)))
