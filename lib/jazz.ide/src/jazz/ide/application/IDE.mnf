(manifest jazz.ide.application.IDE

  (version 207012)
  (digest "63458427e0a06f5201473f3f8231b25bc6ef7a85")
  (references (jazz.console get-console-manager get-console-text)
              (jazz.debuggee add-debugger-release attach-to-controller current-view-debugger get-controller-debugger get-local-process local-debugger? ready-to-controller start-local-debugger-repl)
              (jazz.debuggee.view.Resources-Monitor Resources-Monitor)
              (jazz.debugger collect-processes current-debugger debugged=? get-debugger-manager get-debuggers get-processes-view register-debugger set-current-debugger set-debugger-manager)
              (jazz.debugger.debugger.Debugger-Manager Debugger-Manager)
              (jazz.debugger.debugger.Exception-View Exception-View)
              (jazz.debugger.debugger.Frames-View Frames-View)
              (jazz.debugger.debugger.Processes-View Processes-View)
              (jazz.debugger.debugger.Restarts-View Restarts-View)
              (jazz.debugger.debugger.Threads-View Threads-View)
              (jazz.debugger.debugger.Variables-View Variables-View)
              (jazz.debugger.jazz.Jazz-Debugger Jazz-Debugger)
              (jazz.debugger.jazz.Snapshot-Debugger Snapshot-Debugger)
              (jazz.debugger.jazz.stub Jazz-Debugger-Local-Proxy)
              (jazz.designer.card.Properties-Manager Properties-Manager)
              (jazz.designer.editor.Descendants-Editor Descendants-Editor)
              (jazz.designer.editor.Text-Editor Text-Editor)
              (jazz.designer.editor.View-Editor View-Editor)
              (jazz.designer.editor.grid Grid-Component-Editor)
              (jazz.designer.manager.Designer-Manager Designer-Manager)
              (jazz.designer.toolbox.Toolbox-Manager Toolbox-Manager)
              (jazz.designer.trait.Traits-Editor Traits-Editor)
              (jazz.editor.c.text.C-Text-View C-Text-View)
              (jazz.editor.clojure.text.Clojure-Text-View Clojure-Text-View)
              (jazz.editor.commonlisp.text.CommonLisp-Text-View CommonLisp-Text-View)
              (jazz.editor.diff.text.Diff-Text-View Diff-Text-View)
              (jazz.editor.jazz.log.Log-Viewer Log-Viewer)
              (jazz.editor.jazz.log.Logs-Manager Logs-Manager)
              (jazz.editor.jazz.log.Logs-Viewer Logs-Viewer)
              (jazz.editor.jazz.log.User-Log User-Log)
              (jazz.editor.jazz.profiler.Profile-Results Profile-Results)
              (jazz.editor.jazz.text.Jazz-Plain-Text-View Jazz-Plain-Text-View)
              (jazz.editor.jazz.text.Jazz-Text-View Jazz-Text-View)
              (jazz.editor.jazz.tools.Class-Browser Class-Browser)
              (jazz.editor.jazz.tools.References-Analyser References-Analyser)
              (jazz.editor.lisp.text.Lisp-Console-Manager Lisp-Console-Manager)
              (jazz.editor.scheme.text.Scheme-Text-View Scheme-Text-View)
              (jazz.editor.sql.sql.SQL-Connections-Manager SQL-Connections-Manager)
              (jazz.editor.sql.sql.SQL-Console-Manager SQL-Console-Manager)
              (jazz.editor.sql.sql.SQL-Console-Text-View SQL-Console-Text-View)
              (jazz.editor.sql.sql.SQL-Text-View SQL-Text-View)
              (jazz.editor.sql.sql.SQL-Tree-Output SQL-Tree-Output)
              (jazz.editor.sql.view get-sql-console-text)
              (jazz.editor.tex.text.Tex-Text-View Tex-Text-View)
              (jazz.git.ui Git-Explorer)
              (jazz.groupware.compare.Compare-Directories Compare-Directories)
              (jazz.groupware.compare.Compare-Files Compare-Files)
              (jazz.groupware.compare.Threeway-Compare-Texts Threeway-Compare-Texts)
              (jazz.ide.code.Chapters-Browser Chapters-Browser)
              (jazz.ide.code.Hierarchy-Browser Hierarchy-Browser)
              (jazz.ide.login choose-login)
              (jazz.ide.server.Servers-Manager Servers-Manager)
              (jazz.ide.showcase.Showcase Showcase)
              (jazz.ide.tool.Skins-Manager Skins-Manager)
              (jazz.io Clojure-Extensions CommonLisp-Extensions File Jazz-Extensions Scheme-Extensions Unknown-Alias-Exception extension=? file? is-alias?)
              (jazz.io.literals construct-file)
              (jazz.jml construct-form locators-ref)
              (jazz.jml.syntax <form>)
              (jazz.jrm get-local-register)
              (jazz.language.runtime.debug console-input-port console-output-port)
              (jazz.language.runtime.exception call-with-catch error signal-cancel with-system-exception-debugger)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string Object-Class (Sequence sequence-element) (Sequence sequence-last) element find find-if first last make-search-context member? neq? sort)
              (jazz.language.runtime.kernel class-of clear-terminal composite-reference? dispatch exit find-pathname-unit is? kernel-platform kernel-source-access? new unspecified)
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.macros catch unless when ~)
              (jazz.library with-execution-context)
              (jazz.library.component form-imports parse-form read-form tag-reference-not-found-handler)
              (jazz.library.event.Event Event)
              (jazz.library.favorite.Favorites-Manager Favorites-Manager)
              (jazz.library.handler.Event-Handler Event-Handler (Event-Handler get-properties) (Event-Handler invoke))
              (jazz.library.integrity.Violations-Manager Violations-Manager)
              (jazz.library.utility.Output-Log Output-Log)
              (jazz.locale Locales)
              (jazz.project get-active-project get-workbench locator->entry set-workbench)
              (jazz.project.project.Project-Not-Found Project-Not-Found)
              (jazz.project.repositories.Repositories-Manager Repositories-Manager)
              (jazz.project.workbench.Projects-Manager Projects-Manager)
              (jazz.project.workbench.Workbench Workbench)
              (jazz.project.workbench.Workbench-Cataloguer Workbench-Cataloguer)
              (jazz.project.workbench.Workbench-Manager Workbench-Manager)
              (jazz.recorder.Macro-Recorder Macro-Recorder)
              (jazz.recorder.Recording-Manager Recording-Manager)
              (jazz.system find-setting get-preferences make-event reloading-process? terminal-repl toggle-terminal user-message)
              (jazz.system.access get-application)
              (jazz.system.application.Application Application (Application add-application-listener) (Application add-history) (Application call-exit-listeners) (Application call-save-environment-listeners) (Application choose-profile-login) (Application class-actions) (Application close-environment) (Application conclude-environment) (Application default-frame-class) (Application designer-default-imports) (Application designer-form-imports) (Application edit-definitions) (Application edit-document) (Application edit-file) (Application edit-references) (Application find-menu) (Application find-status-bar) (Application finish-process) (Application get-cataloguer) (Application get-documentation-cataloguer) (Application get-logs-manager) (Application get-output-log) (Application get-recorder) (Application get-search-manager) (Application get-toplevel) (Application history-manager) (Application known-extension-frame-class) (Application navigable-results) (Application process-alias) (Application reload-component) (Application save-bindings) (Application save-environment) (Application save-workspaces) (Application stage-class) (Application terminate-process) (Application toplevel) (Application unknown-extension-frame-class) (Application update-modal-actions) (Application use-profile-logging?))
              (jazz.system.process.Process (Process conclude-debuggee) (Process finalize-process) (Process get-local-debugger) (Process get-profile) (Process get-snapshot-debugger) (Process initial-console-context) (Process install-process) (Process persist-preferences) (Process prepare-workbench) (Process process-name) (Process profile) (Process register-base-objects) (Process reload-process) (Process use-profile?))
              (jazz.ui call-action find-actions set-action-enabled?)
              (jazz.ui.action.Action Action)
              (jazz.ui.activity.Activities-Manager Activities-Manager)
              (jazz.ui.clipboard.platform.glfw get-clipboard-text)
              (jazz.ui.dialog set-current-modal)
              (jazz.ui.dialog.platform.glfw choose-file)
              (jazz.ui.document.Document Document (Document get-document-controller))
              (jazz.ui.literals construct-action)
              (jazz.ui.preference.Bindings-Manager Bindings-Manager)
              (jazz.ui.preference.Preferences-Manager Preferences-Manager)
              (jazz.ui.preference.Shortcut-Viewer Shortcut-Viewer)
              (jazz.ui.search.Projects-Search Projects-Search)
              (jazz.ui.search.Search-Results Search-Results)
              (jazz.ui.text.Code-Text-View Code-Text-View (Code-Text-View standardize-form))
              (jazz.ui.text.Plain-Formatted-Text-View Plain-Formatted-Text-View)
              (jazz.ui.text.Plain-Text-View Plain-Text-View)
              (jazz.ui.text.Text-View Text-View (Text-View current-expr))
              (jazz.ui.view current-document find-frame-host get-focus get-modal message-box new-frame select-docked show-palette singleton-docked warn-cancel with-cursor with-safe-execution)
              (jazz.ui.view.Wallpaper-Stage Wallpaper-Stage)
              (jazz.ui.window.platform.independant delay-event)
              (jazz.ui.workspace select-workspace selected-workspace)
              (scheme.language.runtime.kernel + - append apply car cons current-input-port current-output-port eq? eqv? for-each length list list->table modulo not null? string>? string? symbol?)))
