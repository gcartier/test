(manifest jazz.project.project.Project

  (version 207012)
  (digest "1910a91fef5629df07933be466583eec3acd8297")
  (references (jazz.debugger present-process-traits)
              (jazz.designer.descriptor.Component-Descriptor (Component-Descriptor component-addable-class?) (Component-Descriptor component-get-categorized-addable-classes) (Component-Descriptor component-get-component-image) (Component-Descriptor component-property-domain) (Component-Descriptor component-set-presentation))
              (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Boolean-Domain Boolean-Domain)
              (jazz.designer.domain.File-Domain File-Domain)
              (jazz.designer.domain.Localized-Domain Localized-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.git Git-Depot)
              (jazz.io Directory (Directory new-directory) (Directory new-file) File (Pathname subpath) Unknown-Alias-Exception effective-catalog-extensions extension=? filename=? path-settings)
              (jazz.io.literals construct-directory)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception call-with-catch error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string List-Factory (List-Factory get-output) (List-Factory put) Object-Class (Sequence sequence-element) element find-if is-not? member? memq? neq? nu<? sort table-keys)
              (jazz.language.runtime.kernel class-of dispatch field-name is? load-repository new not-null? repository-dependencies split-symbol subtype? unspecified unspecified? with-exception-catcher)
              (jazz.language.runtime.object print-unreadable)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros catch submodule unless when ~)
              (jazz.library.component instantiate-file)
              (jazz.library.component.Component (Component children) (Component find-ascendant) (Component finish) (Component for-each-descendant) (Component get-file-form) (Component get-form) (Component get-parent) (Component name) (Component parent) (Component print) (Component set-name) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.literals construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.project.file.Project-File Project-File (Project-File catalog-name) (Project-File get-source) Project-File-Descriptor (Project-File-Descriptor component-get-presentation) (Project-File-Descriptor component-presentation-property?) (Project-File-Descriptor~Class get-class-form) (Project-File-Descriptor~Class get-class-forms) (Project-File-Descriptor~Class set-class-form) (Project-File~Class get-class-descriptor))
              (jazz.project.file.Project-Group Project-Group)
              (jazz.project.project.Project-Catalog Project-Catalog)
              (jazz.project.project.Project-Container Project-Container)
              (jazz.project.project.Project-Not-Found Project-Not-Found)
              (jazz.project.workbench.Workbench Workbench)
              (jazz.system.access get-application)
              (jazz.ui.view message-box)
              (scheme.language.runtime.kernel - > append apply call-with-input-file call-with-output-file car cdr cons eq? equal? for-each length list list->table make-table map newline not null? pair? read string->symbol string-append symbol->string symbol? table-ref table-set! write)
              (scheme.syntax declaration-path)))
