(manifest jazz.project.workbench.Workbench-Manager

  (version 207012)
  (digest "64edbc96efd12a458cb7cc0addcd86258ed1afda")
  (references (jazz.catalog post-catalog)
              (jazz.designer with-design-locked)
              (jazz.designer.editor.Component-Editor Component-Editor (Component-Editor client) (Component-Editor designer) (Component-Editor get-designer-class) (Component-Editor install) (Component-Editor install-in-host) (Component-Editor new-document-controller) (Component-Editor on-designer) (Component-Editor set-client) (Component-Editor show-properties) (Component-Editor~Class host-icon) (Component-Editor~Class host-title))
              (jazz.designer.editor.Component-Editor-Controller Component-Editor-Controller)
              (jazz.designer.menu update-component-menu)
              (jazz.designer.menu.Component-Menu Component-Menu (Component-Menu~Class get-class-form) (Component-Menu~Class get-class-forms) (Component-Menu~Class set-class-form))
              (jazz.doc.tools.Doc-Editor Doc-Editor)
              (jazz.git.ui Git-Explorer)
              (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.groupware.compare.Compare-Directories Compare-Directories)
              (jazz.io Directory (Directory new-file) File (Pathname exists?) (Pathname get-extension) directory? effective-include-extensions extension=? extract-extension file? set-current-directory with-preserved-current-directory)
              (jazz.io.literals construct-directory construct-file)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error signal-cancel)
              (jazz.language.runtime.format format format-cardinality format-is/are format-plural format-y/ies)
              (jazz.language.runtime.functional ->string (Class external-name) List-Factory (List-Factory get-output) (List-Factory put) Object-Class (Sequence sequence-last) capitalize category-identifier ci<? ci=? collect-if concatenate is-not? join last member? merge-ordered nu<? sort subseq table-keys/values)
              (jazz.language.runtime.geometry Cell Dimension)
              (jazz.language.runtime.kernel boolean class-of continuation-capture continuation-return deserialize-runtime-reference dispatch find-pathname-unit is? new not-null? resolve-runtime-reference split-identifier unspecified)
              (jazz.language.runtime.object (Object object-capitalize))
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.macros unless when ~)
              (jazz.language.syntax.typecase typecase)
              (jazz.library.component instantiate-file read-form)
              (jazz.library.component.Component (Component get-children) (Component get-form) (Component get-presentation-property) (Component locate) (Component locate-component) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.handler.Event-Handler Event-Handler)
              (jazz.library.literals construct-event-handler construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.library.template copy-template)
              (jazz.library.utility.Output-Log Output-Log)
              (jazz.library.utility.Timer Timer (Timer cpu-duration))
              (jazz.literals construct-dimension)
              (jazz.project collect-concrete-projects get-active-project get-workbench launch-executable set-active-project)
              (jazz.project.file.Project-Directory Project-Directory (Project-Directory get-directory))
              (jazz.project.file.Project-File Project-File (Project-File get-source))
              (jazz.project.file.Project-Group Project-Group)
              (jazz.project.project.Project Project (Project concrete?) (Project get-description-file) (Project get-documentation) (Project get-dynamic?) (Project load-catalogs) (Project project-depot) (Project update-dynamic-dependencies))
              (jazz.project.workbench.Configuration-Selector Configuration-Selector)
              (jazz.project.workbench.New-Document-Dialog New-Document-Dialog)
              (jazz.project.workbench.New-Project-Dialog New-Project-Dialog)
              (jazz.project.workbench.Project-Selector Project-Selector)
              (jazz.project.workbench.Synchronize-Box Synchronize-Box)
              (jazz.project.workbench.Synchronize-Tree Synchronize-Border)
              (jazz.project.workbench.Workbench Workbench)
              (jazz.project.workbench.Workbench-Designer Workbench-Designer)
              (jazz.project.workbench.Workbench-Editor Workbench-Editor)
              (jazz.system get-preferences set-preference user-feedback user-message)
              (jazz.system.access get-application)
              (jazz.system.process.Exit-Listener Exit-Listener)
              (jazz.ui.action.Action Action)
              (jazz.ui.dialog close-modal-dialog)
              (jazz.ui.dialog.platform.glfw choose-directory choose-file)
              (jazz.ui.document.Document Document (Document get-document-controller))
              (jazz.ui.document.Document-Controller (Document-Controller document-status))
              (jazz.ui.literals construct-action)
              (jazz.ui.menu.Label-Item Label-Item)
              (jazz.ui.menu.Menu (Menu layout-menu))
              (jazz.ui.menu.Separator-Item Separator-Item)
              (jazz.ui.tree.Tree-Node Tree-Node)
              (jazz.ui.view current-document get-modal get-output-log message-box new-frame select-docked with-cursor)
              (jazz.ui.view.Layout-View Layout-View)
              (jazz.ui.view.Push-Tool Push-Tool)
              (jazz.ui.view.View (View focus-default) (View get-tools-view) (View key-press) (View with-update-locked))
              (scheme.language.runtime.kernel < = > apply car cdr cons eq? for-each length list list->table map not null? reverse string->symbol string-ci=?)
              (scheme.syntax declaration-path)))
