(manifest jazz.editor.jazz.tools.Class-Browser

  (version 207012)
  (digest "5a30df3df7bb857dd5c4512669ca35daa453f1bb")
  (references (jazz.catalog.entry class-entry-ascendant class-entry-ascendants class-entry-descendants find-entry method-entries method-entry-class)
              (jazz.graphic.Color Color)
              (jazz.graphic.font.Font Font)
              (jazz.graphic.literals construct-color construct-font)
              (jazz.ide.application.IDE-Text-View IDE-Text-View)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string (Class external-name) Object-Class append! collect-if empty-string? find memq? neq? remove-duplicates sort)
              (jazz.language.runtime.geometry Dimension Rect)
              (jazz.language.runtime.kernel class-of dispatch new)
              (jazz.language.syntax.macros when ~)
              (jazz.library.component.Component (Component locate) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.handler.Event-Handler Event-Handler)
              (jazz.library.literals construct-event-handler construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.literals construct-dimension construct-rect)
              (jazz.ui find-actions)
              (jazz.ui.layout.Separator Separator)
              (jazz.ui.tree.Tree-Header Tree-Header)
              (jazz.ui.tree.Tree-Node Tree-Node)
              (jazz.ui.tree.Tree-Node-Column Tree-Node-Column)
              (jazz.ui.tree.Tree-View Tree-View)
              (jazz.ui.view message-box with-cursor)
              (jazz.ui.view.Border-View Border-View)
              (jazz.ui.view.Label-View Label-View)
              (jazz.ui.view.Layout-View Layout-View (Layout-View resize))
              (jazz.ui.view.Push-Button Push-Button)
              (jazz.ui.view.Scroller-View Scroller-View)
              (jazz.ui.view.View (View focus-default) (View get-tab-stops) (View guest-actions) (View host-workspaces) (View on-return-press) (View~Class host-icon) (View~Class host-size) (View~Class host-title))
              (scheme.language.runtime.kernel apply cons eq? for-each list list->table make-table map not string<? table-ref table-set!)
              (scheme.syntax declaration-path)))
