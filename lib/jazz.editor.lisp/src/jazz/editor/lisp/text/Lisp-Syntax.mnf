(manifest jazz.editor.lisp.text.Lisp-Syntax

  (version 207012)
  (digest "4ed7b2ff1e79325b02775caab8acdb53ef5981e8")
  (references (jazz.editor.lisp get-expression-syntaxes)
              (jazz.editor.lisp.parser.Lisp-Parser Lisp-Parser)
              (jazz.language.runtime.exception call-with-catch)
              (jazz.language.runtime.functional ->string Object-Class memq? read-string-element scheme-constituent? skip-whitespace some?)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line))
              (jazz.language.runtime.kernel continuation-capture continuation-return new unspecified with-readtable)
              (jazz.language.syntax.macros catch unless when)
              (jazz.library.automata build-search-automata)
              (jazz.library.exception.Explore-Error Explore-Error)
              (jazz.system.access get-application)
              (jazz.ui.syntax.Code-Syntax Code-Syntax (Code-Syntax apply-coloring) (Code-Syntax colorize-keyword) (Code-Syntax colorize-syntax) (Code-Syntax colorize-type) (Code-Syntax compute-syntax-automata) (Code-Syntax compute-syntax-targets) (Code-Syntax explorer-class) (Code-Syntax get-readtable) (Code-Syntax recolorize-text) (Code-Syntax syntax-automata) (Code-Syntax syntax-targets))
              (jazz.ui.syntax.Text-Syntax (Text-Syntax auto-complete-characters) (Text-Syntax colorize-comments) (Text-Syntax colorize-declarations) (Text-Syntax comment-string) (Text-Syntax comment-style?) (Text-Syntax expr-at) (Text-Syntax expr-range) (Text-Syntax favorite-completions) (Text-Syntax get-constituent-test) (Text-Syntax get-match-test) (Text-Syntax model) (Text-Syntax parser-class) (Text-Syntax preferences) (Text-Syntax range-expr) (Text-Syntax string-style?) (Text-Syntax supports-expr?) (Text-Syntax text-constituent?) (Text-Syntax textual-style?) (Text-Syntax title-comment-string))
              (jazz.ui.text.Text-Explorer Text-Explorer (Text-Explorer set-line-hook))
              (jazz.ui.view with-safe-explore)
              (scheme.language.runtime.kernel + > car equal? list make-string map not string-append table->list)))
