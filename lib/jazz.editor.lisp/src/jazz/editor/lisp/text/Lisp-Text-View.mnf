(manifest jazz.editor.lisp.text.Lisp-Text-View

  (version 207012)
  (digest "176daf111f0132fb4dccc0479590ac3f50d4a8f6")
  (references (jazz.debugger get-debugger-manager)
              (jazz.editor.lisp (Expression-Syntax get-modifiers) (Expression-Syntax get-tabulate) get-expression-syntax)
              (jazz.editor.lisp.text.Lisp-Syntax Lisp-Syntax)
              (jazz.jml.parse tag?)
              (jazz.language.runtime.exception call-with-catch)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional /= Object-Class (Sequence sequence-cardinality) cardinality collect-if concatenate element ends-with? ends-with?stringstring find find-symbol memq? neq? nu+ nu<=? nu<? nu=? read-string-element regular-search sleep some? starts-with? starts-with?stringstring subseq upper-case?)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) Range$Cell$ (Range$Cell$ get-end) (Range$Cell$ get-start))
              (jazz.language.runtime.kernel class-of continuation-capture continuation-return dispatch enqueue keyword? new new-queue not-null? queue-list unspecified)
              (jazz.language.runtime.object Object (Object object-upper-case?))
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.increase decrease! increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros catch constant unless when while ~)
              (jazz.library.exception.Explore-Error Explore-Error)
              (jazz.library.literals construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.system user-message)
              (jazz.system.access get-application)
              (jazz.ui delay-evaluate? find-actions get-delayed-evaluate reset-delayed-evaluate set-delayed-evaluate)
              (jazz.ui.outline.Outline-View (Outline-View model))
              (jazz.ui.search make-text-search-result)
              (jazz.ui.text.Code-Text-View Code-Text-View (Code-Text-View context-menu) (Code-Text-View edit-definitions) (Code-Text-View edit-references) (Code-Text-View evaluate-buffer) (Code-Text-View evaluate-range) (Code-Text-View evaluate-selection) (Code-Text-View focus-actions) (Code-Text-View install) (Code-Text-View match-backwards?) (Code-Text-View match-forwards?) (Code-Text-View new-syntax) (Code-Text-View preferences) (Code-Text-View standardize-form) (Code-Text-View tab-press) (Code-Text-View tabulate) (Code-Text-View tabulate-line) (Code-Text-View tabulate-lines))
              (jazz.ui.text.Paragraph Paragraph (Paragraph get-runs))
              (jazz.ui.text.Text-Explorer Text-Explorer (Text-Explorer get-marked) (Text-Explorer get-range) (Text-Explorer get-start) (Text-Explorer outer-expr))
              (jazz.ui.text.Text-View (Text-View accepts-returns?) (Text-View add-style) (Text-View buffer-selection) (Text-View complete-at) (Text-View context-menu-click) (Text-View current-expr-range) (Text-View effective-selection) (Text-View empty-effective-selection?) (Text-View explorer-class) (Text-View get-char) (Text-View get-column) (Text-View get-context-menu) (Text-View get-end) (Text-View get-headers) (Text-View get-moniker) (Text-View get-selection) (Text-View get-start) (Text-View get-string) (Text-View has-completion?) (Text-View info-message) (Text-View insert-char) (Text-View mouse-insert) (Text-View new-range) (Text-View range-expr) (Text-View replace-text) (Text-View return-press) (Text-View set-caret) (Text-View set-modified?) (Text-View syntax))
              (jazz.ui.view message-box with-cursor with-safe-explore)
              (jazz.ui.view.View (View track-popup-menu) (View with-update-locked) (View~Class host-icon))
              (scheme.language.runtime.kernel * + - <= = > >= apply boolean? car cdr char? cons eq? eqv? for-each length list make-string map not null? number? pair? reverse string->symbol string-append string-ref substring symbol? values)))
