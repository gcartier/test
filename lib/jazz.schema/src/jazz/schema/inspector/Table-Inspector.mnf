(manifest jazz.schema.inspector.Table-Inspector

  (version 207012)
  (digest "220e729ff2047f3625c425b503fe77375a02d962")
  (references (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.functional ->string Object-Class)
              (jazz.language.runtime.geometry Dimension Point)
              (jazz.language.runtime.kernel new)
              (jazz.language.syntax.macros when)
              (jazz.library.component.Component (Component locate) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.literals construct-dimension construct-point)
              (jazz.schema.inspector.Table-Inspector-Tree Table-Inspector-Tree)
              (jazz.ui.tree.Tree-Header Tree-Header)
              (jazz.ui.tree.Tree-Label Tree-Label)
              (jazz.ui.tree.Tree-Label-Column Tree-Label-Column)
              (jazz.ui.tree.Tree-Node Tree-Node)
              (jazz.ui.tree.Tree-Node-Column Tree-Node-Column)
              (jazz.ui.view.Layout-View Layout-View)
              (jazz.ui.view.Scroller-View Scroller-View)
              (jazz.ui.view.View (View~Class host-position) (View~Class host-size) (View~Class host-title))
              (scheme.language.runtime.kernel + car cdr cons eq? for-each length list list->table map not)
              (scheme.syntax declaration-path)))
