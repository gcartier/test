(manifest jazz.schema.data.Data-Table

  (version 207012)
  (digest "41bfd4c87f77a780ae27be6c230981336decb681")
  (references (jazz.language.runtime.format format format-plural)
              (jazz.language.runtime.functional List-Factory (List-Factory get-output) (List-Factory put) (List-Factory put-sequence) Object-Class (Sequence sequence-element) append! category-name collect-if element find-if join remove! sort)
              (jazz.language.runtime.kernel class-of continuation-capture continuation-return dispatch new unspecified)
              (jazz.language.runtime.object Object print-unreadable)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros when while ~)
              (jazz.schema.data.Data-Column Data-Column)
              (jazz.schema.data.Data-Constraint Data-Constraint)
              (jazz.schema.data.Data-Entity Data-Entity (Data-Entity add) (Data-Entity create) (Data-Entity get-categorized-children) (Data-Entity get-children) (Data-Entity initialize) (Data-Entity owner))
              (jazz.schema.data.Data-Index Data-Index)
              (jazz.schema.data.Data-Object (Data-Object get-kind) (Data-Object get-property) (Data-Object name) (Data-Object parent) (Data-Object print) (Data-Object properties) (Data-Object property-names))
              (jazz.schema.data.Data-Primary-Key Data-Primary-Key)
              (jazz.schema.data.Data-Row Data-Row)
              (jazz.schema.data.Data-Trigger Data-Trigger)
              (scheme.language.runtime.kernel + < = > append apply cadr car cddr cdr cons for-each length list map not null? set-cdr! string=? values)))
