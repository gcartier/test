(manifest world.renderer

  (version 207012)
  (digest "848cd6ad7353931929f87884fd43f0b0d512d408")
  (references (jazz.graphic.opengl.glew.header GL_ALPHA_TEST GL_BACK GL_BLEND GL_CULL_FACE GL_FRONT GL_GEQUAL GL_GREATER GL_LIGHTING GL_ONE_MINUS_SRC_ALPHA GL_SAMPLE_ALPHA_TO_COVERAGE_ARB GL_SRC_ALPHA glAlphaFunc glBlendFunc glCullFace glDisable glEnable)
              (jazz.language.runtime.functional Axis (Axis get-content) (Axis get-size) (Axis set-size) Object-Class axis-add element)
              (jazz.language.runtime.kernel new unspecified)
              (jazz.language.runtime.object Object (Object initialize))
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros site unless when)
              (jazz.library.component.Component (Component get-children) (Component get-visible?))
              (scheme.language.runtime.kernel + < = for-each iterate-table length vector-ref vector-set!)
              (world *current-world*)
              (world.animation Morphing (Morphing get-bone-matrices))
              (world.element (Element draw) (Element drawable?) (Element get-matrix))
              (world.entity Entity (Entity cache-model) (Entity entity-animate?) (Entity entity-meshes) (Entity get-morphing) (Entity get-renderer))
              (world.geometry matrix-multiply!)
              (world.geometry.classes make-matrix)
              (world.geometry.syntax make-matrix& matrix-multiply&)
              (world.live World (World find-mesh-program) (World get-block-matrix))
              (world.material Material (Material get-renderer))
              (world.mesh Mesh (Mesh get-material))
              (world.model Model (Model get-global-matrix) (Model get-meshes) (Model model-bind-uniforms) (Model model-renderer))
              (world.programs Mesh-Program (Mesh-Program bind-render-uniforms) (Mesh-Program bind-uniforms) (Mesh-Program draw-mesh) (Mesh-Program unbind-render-uniforms) (Mesh-Program unbind-uniforms))
              (world.renderers get-character-renderer get-character2-renderer get-color-renderer get-coverage-renderer get-culled-transparent-renderer get-drawable-renderer get-fly-renderer get-julia-renderer get-kaleidoscope-renderer get-motion-blur-renderer get-multitexture-renderer get-occlusion-renderer get-opaque-renderer get-radial-blur-renderer get-sierpinski-renderer get-square-tunnel-renderer get-squareframe-renderer get-transparent-renderer get-tunnel-renderer get-water-renderer get-wet-renderer get-wireframe-renderer register-renderer set-character-renderer set-character2-renderer set-color-renderer set-coverage-renderer set-culled-transparent-renderer set-drawable-renderer set-fly-renderer set-julia-renderer set-kaleidoscope-renderer set-motion-blur-renderer set-multitexture-renderer set-occlusion-renderer set-opaque-renderer set-radial-blur-renderer set-sierpinski-renderer set-square-tunnel-renderer set-squareframe-renderer set-transparent-renderer set-tunnel-renderer set-water-renderer set-wet-renderer set-wireframe-renderer)
              (world.shader (Shader-Program unuse) (Shader-Program use))
              (world.support get-arb-multisample?)
              (world.syntax current-world)))
