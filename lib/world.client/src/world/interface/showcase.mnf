(manifest world.interface.showcase

  (version 207012)
  (digest "ec9f9e7057dc6a1e8e21f6e880fcd37e65dfdd3e")
  (references (jazz.graphic.opengl.glew.header GL_BLEND GL_DEPTH_BUFFER_BIT GL_LIGHTING GL_LINE_LOOP GL_MODELVIEW GL_ONE_MINUS_SRC_ALPHA GL_SRC_ALPHA glBegin glBlendFunc glClear glDisable glEnable glEnd glLineWidth glLoadIdentity glMatrixMode glPopMatrix glPushMatrix glVertex3f)
              (jazz.language.runtime.functional /= Object-Class near?)
              (jazz.language.runtime.kernel current-seconds make-mutex mutex-lock! mutex-unlock! new set-?s unspecified)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros unless when)
              (jazz.library.utility.Pulse Pulse)
              (jazz.system find-setting)
              (scheme.language.runtime.kernel * + - / < <= = > >= car cdr eq? length list list->vector max min not vector-length vector-ref)
              (world *current-world*)
              (world.camera Camera (Camera camera-update) (Camera derive-target) (Camera set-frustum-radius) (Camera set-screen-height) (Camera set-screen-width) (Camera setup-camera))
              (world.dye dye)
              (world.dyes red-dye)
              (world.element (Element get-lookat) (Element get-position))
              (world.geometry cross-normal ray-intersects-sphere?)
              (world.geometry.classes vertex vertex-copy! vertex-x vertex-y vertex-z vertex-z-set!)
              (world.light Light-Ambient)
              (world.lighting Lighting (Lighting get-lights) (Lighting set-ambient-color) (Lighting set-lights) (Lighting set-lights-count) set-current-lighting)
              (world.live World (World get-height) (World get-width) (World play-sound-file))
              (world.lookat (LookAt set-right) (LookAt set-sight) (LookAt set-up))
              (world.opengl gl-colorize-dye gl-reset-color)
              (world.renderer register-entity render-character render-opaque render-transparent)
              (world.renderers reset-renderes)
              (world.scene Scene)
              (world.syntax current-world)
              (world.window with-window-cursor)))
