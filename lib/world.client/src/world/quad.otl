(module world.quad jazz
  (import (world.geometry))
  (import (world.polygon))
  (definition public (make-quad element v1 v2 v3 v4))
  (definition public (make-smooth-quad element v1 v2 v3 v4 n1 n2 n3 n4))
  (class Quad extends Polygon
    (method protected override (triangle-count) <fx>)
    (method protected override (add-triangles uv <f32vector> depth <fl> add))
    (method protected override (iterate-triangles proc))
    (method public final (get-v1))
    (method public final (get-v2))
    (method public final (get-v3))
    (method public final (get-v4))
    (method public virtual (get-normal1))
    (method public virtual (get-normal2))
    (method public virtual (get-normal3))
    (method public virtual (get-normal4))
    (method protected override (copy-polygon) <Polygon>)
    (method protected override (transform-polygon matrix <f64vector> inverse-matrix <f64vector>) <Polygon>)
    (method protected override (polygon-move! vect <f64vector> offset <fx> matrix <f64vector+>) <void>)
    (method protected override (polygon-extract! elem vect <f64vector> offset <fx> matrix <f64vector+>) <void>))
  (class Smooth-Quad extends Quad
    (slot n1 <f64vector> getter generate)
    (slot n2 <f64vector> getter generate)
    (slot n3 <f64vector> getter generate)
    (slot n4 <f64vector> getter generate)
    (method protected override (initialize element vertices n1 n2 n3 n4))
    (method protected override (get-normal1))
    (method protected override (get-normal2))
    (method protected override (get-normal3))
    (method protected override (get-normal4))))
