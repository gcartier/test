(module world.programs jazz
  (import (jazz.graphic.opengl.glew))
  (import (world))
  (import (world.atlas))
  (import (world.autoload))
  (import (world.buffer))
  (import (world.dye))
  (import (world.foreign))
  (import (world.lighting))
  (import (world.material))
  (import (world.mesh))
  (import (world.shader))
  (import (world.shaders))
  (import (world.support))
  (import (world.syntax (phase syntax)))
  (class Mesh-Program extends Shader-Program
    (slot model_matrix-uniform)
    (slot use_bones-uniform)
    (slot bone_matrices-uniform)
    (slot moment-uniform)
    (slot vertex_coord-attribute)
    (slot normal-attribute)
    (slot bone_id-attribute)
    (method protected override (prepare))
    (method protected virtual (use-normal?))
    (method protected virtual (use-moment?))
    (method protected virtual (bind-render-uniforms material))
    (method protected virtual (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment))
    (method protected virtual (enable-attributes mesh <Mesh>) <void>)
    (method protected final (draw-mesh mesh <Mesh>) <void>)
    (method protected virtual (disable-attributes mesh <Mesh>) <void>)
    (method protected virtual (unbind-uniforms))
    (method protected virtual (unbind-render-uniforms)))
  (class Mesh-Color-Program extends Mesh-Program
    (slot color-uniform)
    (method protected override (prepare))
    (method protected override (use-normal?))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> moment color)))
  (class Mesh-Phong-Program extends Mesh-Program
    (slot texture-uniform)
    (slot ambient_color-uniform)
    (slot daylight-uniform)
    (slot sun_color-uniform)
    (slot sun_coord-uniform)
    (slot lights_count-uniform)
    (slot texture_coord-attribute)
    (slot lighting-attribute)
    (slot player_glow-uniform)
    (slot player_coord-uniform)
    (method protected override (prepare))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected override (bind-render-uniforms material <Material>) <void>)
    (method protected override (enable-attributes mesh <Mesh>) <void>)
    (method protected override (disable-attributes mesh <Mesh>) <void>)
    (method protected virtual (enable-buffer-attributes mesh <Mesh> buffer <Buffer> stride <fx>) <void>)
    (method protected virtual (disable-buffer-attributes mesh <Mesh> buffer <Buffer>) <void>)
    (method protected override (unbind-uniforms))
    (method protected override (unbind-render-uniforms)))
  (class Mesh-Occlusion-Program extends Mesh-Program
    (slot daylight-uniform)
    (slot lighting-attribute)
    (method protected override (prepare))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment))
    (method protected override (bind-render-uniforms material))
    (method protected override (enable-attributes mesh <Mesh>))
    (method protected override (disable-attributes mesh <Mesh>))
    (method protected virtual (enable-buffer-attributes mesh <Mesh> buffer <Buffer> stride))
    (method protected virtual (disable-buffer-attributes mesh <Mesh> buffer <Buffer>)))
  (class Mesh-Frame-Program extends Mesh-Program
    (slot WIN_SCALE-uniform)
    (slot WIRE_COL-uniform)
    (slot FILL_COL-uniform)
    (slot swizz-attribute)
    (slot neighbor1-attribute)
    (slot neighbor2-attribute)
    (method protected override (prepare))
    (method protected override (use-normal?))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment (wire-color: wire-color (unspecified)) (fill-color: fill-color (unspecified))))
    (method protected override (enable-attributes mesh <Mesh>))
    (method protected override (disable-attributes mesh <Mesh>)))
  (class Mesh-Wireframe-Program extends Mesh-Frame-Program
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader)))
  (class Mesh-Squareframe-Program extends Mesh-Frame-Program
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader)))
  (class Mesh-Playerframe-Program extends Mesh-Frame-Program
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader)))
  (class Mesh-Floorframe-Program extends Mesh-Frame-Program
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected override (prepare))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment (wire-color: wire-color (unspecified)) (fill-color: fill-color (unspecified)))))
  (class Mesh-Texture-Program extends Mesh-Program
    (slot texture-uniform)
    (slot texture_normalize-uniform)
    (slot texture_bounds-uniform)
    (slot texture_coord-attribute)
    (method protected override (prepare))
    (method protected override (use-normal?))
    (method protected override (default-vertex-shader))
    (method protected override (default-fragment-shader))
    (method protected virtual (use-texture?))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment))
    (method protected override (enable-attributes mesh <Mesh>))
    (method protected override (disable-attributes mesh <Mesh>))
    (method protected override (unbind-uniforms)))
  (definition public (get-transformation-speed))
  (definition public (set-transformation-speed speed <fl>))
  (definition public (get-transformation-time))
  (definition public (update-transformation-time elapse <fl>))
  (class Mesh-Transformation-Program extends Mesh-Texture-Program
    (slot time-uniform)
    (method protected override (prepare))
    (method protected override (use-moment?))
    (method protected override (bind-uniforms mesh <Mesh> matrix <f64vector> bone-matrices moment)))
  (class Mesh-Radial-Blur-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Motion-Blur-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Water-Program extends Mesh-Transformation-Program
    (slot daylight-uniform)
    (method protected override (prepare))
    (method protected override (default-fragment-shader))
    (method protected override (bind-render-uniforms material)))
  (class Mesh-Wet-Program extends Mesh-Phong-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Julia-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader))
    (method protected override (use-texture?)))
  (class Mesh-Sierpinski-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Multitexture-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Kaleidoscope-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Tunnel-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Square-Tunnel-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Fly-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader)))
  (class Mesh-Pulse-Program extends Mesh-Transformation-Program
    (method protected override (default-fragment-shader))))
