(module world.light jazz
  (import (jazz.jml))
  (import (world.dye))
  (import (world.dyes))
  (import (world.gadget))
  (import (world.geometry))
  (import (world.serialization))
  (import (world.syntax (phase syntax)))
  (class Light extends Gadget
    (method meta protected override (marshall-object obj))
    (method meta protected override (unmarshall-object content))
    (property constant-attenuation <fl> accessors generate)
    (property linear-attenuation <fl> accessors generate)
    (property quadratic-attenuation <fl> accessors generate)
    (property ambient-color <Object> accessors generate)
    (method protected override (prepare rest))
    (method protected virtual (light-model))
    (method protected override (print output readably))
    (method public final (get-diffuse-color))
    (method protected virtual (render-color)))
  (class Light-Point extends Light
    (method protected override (light-model))
    (method protected override (render-color)))
  (class Light-Directional extends Light
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms))
    (method protected override (light-model))
    (method protected override (render-color)))
  (class Light-Ambient extends Light
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms))
    (method protected override (light-model))
    (method protected override (render-color))))
