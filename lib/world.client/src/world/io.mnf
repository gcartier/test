(manifest world.io

  (version 207012)
  (digest "0a7e309dc6485f4d326557600303b769ba791c9a")
  (references (jazz.designer.designer.Designer Designer)
              (jazz.io Directory extract-base filename=?)
              (jazz.io.literals construct-directory)
              (jazz.jml construct-form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional join nu=?)
              (jazz.language.runtime.kernel continuation-capture continuation-return enqueue f32vector f32vector-length f32vector-ref f32vector? f64vector-set! flonum? make-f64vector new new-queue queue-list specified? unspecified)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros unless when)
              (jazz.library.component imports-locator read-form)
              (jazz.library.component.Component (Component close))
              (jazz.library.component.Data Data)
              (jazz.library.literals construct-version)
              (jazz.system File-Settings find-setting)
              (jazz.system.access get-application)
              (jazz.ui.view close-all-popups)
              (jazz.ui.window.platform.independant delay-event)
              (jazz.version Version)
              (scheme.language.runtime.kernel + / < car cdr eq? equal? for-each list not string->symbol)
              (world *current-world* *current-world-window* *current-zone* load-point world-version zone-version)
              (world.camera (Camera init-stable))
              (world.dye color->dye)
              (world.geometry.classes vertex)
              (world.live World (World execute-script) (World get-eye) (World get-history-camera) (World get-zones-directories) (World new-zone-file) (World reset-camera) (World reset-target) (World update-title) (World zone-update))
              (world.settings world-directory)
              (world.syntax current-world current-world+ current-world-window current-zone current-zone+)
              (world.window World-Window)
              (world.zone Zone (Zone determine-path) (Zone reset-eye-sectors) (Zone stop-tasks))))
