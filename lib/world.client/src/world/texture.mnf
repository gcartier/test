(manifest world.texture

  (version 207012)
  (digest "2798e5e3d3bd5319afade8ab8891b4b6ae87c2e7")
  (references (jazz.graphic.Surface Surface (Surface get-handle))
              (jazz.graphic.opengl.glew gl-check-error)
              (jazz.graphic.opengl.glew.foreign gl-generate-texture)
              (jazz.graphic.opengl.glew.header GL_BGRA GL_GENERATE_MIPMAP GL_LINEAR GL_LINEAR_MIPMAP_LINEAR GL_QUADS GL_REPEAT GL_RGBA GL_TEXTURE_2D GL_TEXTURE_2D_ARRAY_EXT GL_TEXTURE_MAG_FILTER GL_TEXTURE_MIN_FILTER GL_TEXTURE_WRAP_S GL_TEXTURE_WRAP_T GL_TRUE GL_UNSIGNED_BYTE glBegin glBindTexture glColor3f glEnable glEnd glGenerateMipmapEXT glTexCoord2f glTexImage2D glTexImage3D glTexParameteri glTexSubImage3D)
              (jazz.io extension=?)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.functional Object-Class box-list find-keyword unbox-list)
              (jazz.language.runtime.kernel f32vector f32vector-ref f32vector-set! make-f32vector new unspecified)
              (jazz.language.runtime.object Object (Object close) (Object destroy) (Object initialize))
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.bind-keywords bind-keywords)
              (jazz.language.syntax.macros constant prog1 when)
              (jazz.platform.cairo cairo_format_stride_for_width cairo_image_surface_create_for_data cairo_image_surface_create_from_png cairo_image_surface_get_data cairo_image_surface_get_height cairo_image_surface_get_width cairo_surface_destroy)
              (jazz.platform.cairo.cairo-base CAIRO_FORMAT_ARGB32 cairo_image_surface_create)
              (scheme.language.runtime.kernel * = apply car cdr for-each length not values)
              (world *current-world*)
              (world.atlas (Atlas image-rect))
              (world.external.targa load-tga)
              (world.foreign glDeleteTextures*)
              (world.live World (World get-block-atlas))
              (world.support get-framebuffer-objects?)
              (world.syntax current-world)))
