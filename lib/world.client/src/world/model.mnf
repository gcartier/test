(manifest world.model

  (version 207012)
  (digest "fb83c5f09c6a59e6bdd30972496a6e528fa86388")
  (references (jazz.io path-settings)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.functional (Class marshall-object) (Class unmarshall-object) Object-Class partition serialize-object table-keys table-values)
              (jazz.language.runtime.kernel class-of dispatch enqueue is? iterate-table-safe make-f64vector new-queue queue-list unspecified)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind bind-vector)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros when ~)
              (jazz.library.component.Component Component (Component children) (Component install-in-parent) (Component parent))
              (scheme.language.runtime.kernel * + < apply assq cadr call-with-input-file car cddr cdr cons eq? equal? for-each length list list->vector make-table map not pair? read symbol->string symbol? table-ref table-set! vector vector-length vector-ref)
              (world *current-world*)
              (world.generate faces-generator generate-mesh iterate-parallelepiped-vertices parallelepiped-bounds transform-cuboid)
              (world.geometry compute-vertices-bounds cuboid-center cuboid-radiuses make-identity-matrix make-rotation-matrix! make-scaling-matrix! make-translation-matrix! matrix-multiply!)
              (world.geometry.base vertex+ vertex- vertex-norm)
              (world.geometry.classes make-matrix matrix-copy! vertex vertex-copy! vertex-init! vertex-y)
              (world.geometry.syntax make-matrix& make-rotation-matrix& make-scaling-matrix& make-translation-matrix& matrix-multiply&)
              (world.live World (World find-model))
              (world.mesh Mesh)
              (world.polygon polygon-float-size)
              (world.renderers get-transparent-renderer)
              (world.serialization deserialize serialize)
              (world.syntax current-world)))
