(module world.enemy jazz
  (import (world))
  (import (world.actor))
  (import (world.autoload))
  (import (world.block))
  (import (world.commands))
  (import (world.dye))
  (import (world.dyes))
  (import (world.geometry))
  (import (world.serialization))
  (import (world.syntax (phase syntax)))
  (class Enemy extends Actor
    (method meta protected override (marshall-object obj))
    (method meta protected override (unmarshall-object content))
    (slot speed <fl> accessors generate)
    (slot tick? <bool> accessors generate)
    (method protected final (move-enemy time elapse exit (gravity?: gravity? (unspecified)) (response: response (unspecified)) (ignore-entities?: ignore-entities? (unspecified)) (ignore-players?: ignore-players? (unspecified))))
    (method protected override (hit collisions exit))
    (method protected virtual (rebound-x))
    (method protected virtual (rebound-z))
    (method protected virtual (walk-speed))
    (method protected virtual (run-speed))
    (method protected override (move-animation))
    (method protected final (update-lookat dir)))
  (class Creature extends Enemy
    (method meta protected override (marshall-object obj))
    (method meta protected override (unmarshall-object content))
    (slot path-duration accessors generate)
    (slot anim-duration accessors generate)
    (slot aggro-radius accessors generate)
    (slot aggro-target accessors generate)
    (method protected override (prepare rest))
    (method protected override (tick commands time elapse exit))
    (method protected override (hit collisions exit))
    (method protected override (ground-speed))
    (method public virtual (aggro-sound))
    (method public virtual (attack-sound))
    (method protected final (players-aggro))
    (method protected final (aggro-player player))
    (method protected final (attack-player player))
    (method protected final (prepare-pathing))
    (method protected virtual (path-creature)))
  (class Wolf extends Creature
    (method protected override (prepare rest))
    (method protected override (element-radiuses))
    (method protected override (element-radius))
    (method protected override (target-radius))
    (method protected override (aggro-sound))
    (method protected override (attack-sound))
    (method protected override (wound-sound))
    (method protected override (wound-critical-sound))
    (method protected override (death-sound)))
  (class Spider extends Creature
    (method protected override (prepare rest))
    (method protected override (element-radiuses))
    (method protected override (element-radius))
    (method protected override (target-radius))
    (method protected override (aggro-sound))
    (method protected override (attack-sound))
    (method protected override (wound-sound))
    (method protected override (wound-critical-sound))
    (method protected override (death-sound)))
  (class MOB extends Creature
    (method protected override (prepare rest)))
  (class Cow extends MOB
    (method protected override (prepare rest))
    (method protected override (walk-speed))
    (method protected override (run-speed)))
  (class Camel extends MOB
    (method protected override (prepare rest))
    (method protected override (walk-speed))
    (method protected override (run-speed)))
  (class DireWolf extends MOB
    (method protected override (prepare rest))
    (method protected override (walk-speed))
    (method protected override (run-speed)))
  (class Missile extends Enemy
    (method meta protected override (marshall-object obj))
    (method meta protected override (unmarshall-object content))
    (property actor <Object> accessors generate)
    (property kind <Object> accessors generate)
    (slot alive <fl> accessors generate)
    (slot response <Object> accessors generate)
    (method protected override (prepare rest))
    (method protected override (finish rest))
    (method protected final (setup-model))
    (method protected override (element-radiuses))
    (method protected override (element-radius))
    (method protected override (get-friction))
    (method protected final (missile-speed) <fl>)
    (method protected final (missile-life) <fl>)
    (method protected override (tick commands time elapse exit))
    (method protected override (hit collisions exit))
    (method protected override (hit-floor exit))
    (method protected final (remove-self))
    (method protected override (rebound-x))
    (method protected override (rebound-z))))
