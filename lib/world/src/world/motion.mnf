(manifest world.motion

  (version 207012)
  (digest "9ae22c94b1b343e06e29fb2b8a6dacc7df8df771")
  (references (jazz.geometry PI/4)
              (jazz.language.runtime.functional /= Object-Class near?)
              (jazz.language.runtime.kernel current-seconds is? new unspecified)
              (jazz.language.runtime.object Object (Object initialize))
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros unless when)
              (scheme.language.runtime.kernel * + - / < = > >= abs car cdr eq? max min not values)
              (world *current-camera* *current-me* *current-motion*)
              (world.camera Camera (Camera blink-backward) (Camera blink-forward) (Camera camera-update) (Camera derive-target) (Camera move-backward) (Camera move-down) (Camera move-forward) (Camera move-left) (Camera move-right) (Camera move-up) (Camera rotate-down) (Camera rotate-horizontal) (Camera rotate-left) (Camera rotate-right) (Camera rotate-up) (Camera rotate-vertical) (Camera rotate-vertical-up) (Camera warp-backward) (Camera warp-forward) (Camera zoom-in) (Camera zoom-out))
              (world.dye dye-alpha-set!)
              (world.element Element (Element contains-vertex?) (Element get-color) (Element get-lookat) (Element get-position) (Element get-right) (Element get-sight) (Element set-lookat) (Element set-position))
              (world.geometry cross-normal! dot-product lookat lookat-copy! make-lookat matrix-transform-3x4 realign-lookat! rotate-lookat! rotate-lookat-vertical! vertical-angle)
              (world.geometry.base vertex+ vertex+! vertex-! vertex-negate! vertex-scalar*!)
              (world.geometry.classes cuboid-height make-vertex vertex)
              (world.geometry.syntax cross-normal& make-lookat& make-vertex& realign-lookat& rotate-lookat& vertex+& vertex-& vertex-negate& vertex-scalar*&)
              (world.live World (World current-controlled) (World first-target) (World get-commands) (World get-down?) (World get-first-camera) (World get-fly?) (World get-paused?) (World get-viewing?) (World get-world-up) (World hook-eye) (World is-moving?) (World ray-closest-polygon))
              (world.lookat (LookAt get-right) (LookAt get-sight))
              (world.player Player)
              (world.syntax current-camera current-me current-motion)))
