(module world.region jazz
  (import (jazz.io))
  (import (world.binary))
  (import (world.chunk))
  (import (world.section))
  (import (world.syntax (phase syntax)))
  (import (zlib))
  (definition public region-size <fx>)
  (definition public region-header-size <fx>)
  (definition public chunk-padding <fx>)
  (definition public chunk-header-size <fx>)
  (definition public zlib-header-size <fx>)
  (definition public zlib-footer-size <fx>)
  (class World-Region extends Object
    (slot x <fx> getter generate)
    (slot z <fx> getter generate)
    (slot file <File> getter generate)
    (slot port <port> getter generate)
    (slot header <u8vector> getter generate)
    (slot chunks-mutex <Object> getter generate)
    (slot chunks <table> getter generate)
    (method protected override (initialize x z file))
    (method protected override (print output readably))
    (method protected override (destroy))
    (method protected final (read-header))
    (method protected final (with-chunks-mutex thunk))
    (method protected final (get-chunk sector-x <fx> sector-z <fx>) <World-Chunk+>)
    (method protected final (get-chunk-at chunk-index <pair>) <World-Chunk+>)
    (method protected final (chunk-index sector-x <fx> sector-z <fx>) <pair>)
    (method protected final (chunk-header-offset chunk-x <fx> chunk-z <fx>) <fx>)
    (method protected final (get-chunk-offset header-offset <fx>) <fx+>)
    (method protected final (get-chunk-size header-offset <fx>) <fx+>)
    (method protected final (set-chunk-offset header-offset <fx> offset <fx>))
    (method protected final (set-chunk-size header-offset <fx> size <fx>))
    (method protected final (read-chunk chunk-index <pair>) <World-Chunk+>)
    (method protected virtual (deserialize-chunk chunk-data))
    (method protected final (get-section sector-x <fx> sector-y <fx> sector-z <fx>) <World-Section+>)
    (method protected final (save-region (compact?: compact? (unspecified))))
    (method protected virtual (serialize-chunk chunk) <u8vector>)))
