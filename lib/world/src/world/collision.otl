(module world.collision jazz
  (import (jazz.graphic.opengl.glew))
  (import (world))
  (import (world.autoload))
  (import (world.draw))
  (import (world.dyes))
  (import (world.geometry))
  (import (world.history))
  (import (world.homogeneous))
  (import (world.lookat))
  (import (world.mark))
  (import (world.movement))
  (import (world.opengl))
  (import (world.plane))
  (import (world.polygon))
  (import (world.serialization))
  (import (world.syntax (phase syntax)))
  (import (world.task))
  (class Collision-Class extends Object-Class
    (method protected override (marshall-object object))
    (method protected override (unmarshall-object content)))
  (class Collision metaclass Collision-Class extends Object
    (slot polygon <Polygon> getter generate)
    (slot colliders <Object> accessors generate)
    (slot plane <Plane> getter generate)
    (slot distance <fl> getter generate)
    (slot type <symbol> getter generate)
    (method protected override (initialize polygon plane distance type))
    (method protected override (print output readably))
    (method public final (get-element)))
  (definition public (copy-collision coll <Collision>) <Collision>)
  (definition public (copy-collisions cl))
  (definition public (calculate-colliders sphere-matrix <f64vector> inverse-matrix <f64vector> mvt <Movement> travel-breadth <fx> max-distance <fl+> polygon-filter <procedure+> skip-list <list> ignore-entities? <bool> ignore-players? <bool>) <list>)
  (definition public (collide&stop origin <f64vector> target <f64vector> lookat <LookAt> radiuses <f64vector> (max-distance: max-distance (unspecified)) (polygon-filter: polygon-filter (unspecified)) (ignore-entities?: ignore-entities? (unspecified)) (ignore-players?: ignore-players? (unspecified))))
  (definition public (get-collide-max-slide) <fx>)
  (definition public (set-collide-max-slide max-slide <fx>) <void>)
  (definition public (get-debug-collisions?))
  (definition public (set-debug-collisions? flag))
  (definition public (collide&slide origin <f64vector> target <f64vector> lookat <LookAt> radiuses <f64vector> (max-distance: max-distance (unspecified)) (polygon-filter: polygon-filter (unspecified)) (ignore-entities?: ignore-entities? (unspecified)) (ignore-players?: ignore-players? (unspecified))))
  (definition public (get-highlighted))
  (definition public (set-highlighted lst))
  (definition public (get-draw-highlighted?))
  (definition public (set-draw-highlighted? flag))
  (class Collisions-Mark extends Mark
    (method meta protected override (marshall-object object))
    (method meta protected override (unmarshall-object content))
    (slot collisions accessors generate)
    (slot loop-no accessors generate)
    (method protected override (initialize collisions loop-no))
    (method protected override (draw))))
