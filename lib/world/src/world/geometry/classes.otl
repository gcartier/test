(module world.geometry.classes jazz
  (import (world.syntax (phase syntax)))
  (definition public Vertex)
  (definition public (vertex x <fl> y <fl> z <fl>) <f64vector>)
  (definition public (make-vertex) <f64vector>)
  (definition public (make-zero-vertex) <f64vector>)
  (definition public (copy-vertex vert <f64vector>) <f64vector>)
  (definition public (clone-vertex vert <f64vector>) <f64vector>)
  (definition public (vertex-x vert <f64vector>) <fl>)
  (definition public (vertex-y vert <f64vector>) <fl>)
  (definition public (vertex-z vert <f64vector>) <fl>)
  (definition public (vertex-x-set! vert <f64vector> x <fl>) <void>)
  (definition public (vertex-y-set! vert <f64vector> y <fl>) <void>)
  (definition public (vertex-z-set! vert <f64vector> z <fl>) <void>)
  (definition public (vertex=? v1 <f64vector> v2 <f64vector>) <bool>)
  (definition public (vertex/=? v1 <f64vector> v2 <f64vector>) <bool>)
  (definition public (vertex-zero? vert <f64vector>) <bool>)
  (definition public (vertex-zero! vert <f64vector>) <f64vector>)
  (definition public (vertex-init! vert <f64vector> x <fl> y <fl> z <fl>) <f64vector>)
  (definition public (vertex-copy! dst <f64vector> src <f64vector>) <f64vector>)
  (definition public (vertex-hash vert <f64vector>))
  (definition public (present-vertex vert))
  (definition public Quaternion)
  (definition public (quaternion x <fl> y <fl> z <fl> w <fl>) <f64vector>)
  (definition public (make-quaternion) <f64vector>)
  (definition public (quaternion-x quat <f64vector>) <fl>)
  (definition public (quaternion-y quat <f64vector>) <fl>)
  (definition public (quaternion-z quat <f64vector>) <fl>)
  (definition public (quaternion-w quat <f64vector>) <fl>)
  (definition public (quaternion-x-set! quat <f64vector> x <fl>) <void>)
  (definition public (quaternion-y-set! quat <f64vector> y <fl>) <void>)
  (definition public (quaternion-z-set! quat <f64vector> z <fl>) <void>)
  (definition public (quaternion-w-set! quat <f64vector> w <fl>) <void>)
  (definition public (quaternion-init! quat <f64vector> x <fl> y <fl> z <fl> w <fl>) <f64vector>)
  (definition public (quaternion-copy! dst <f64vector> src <f64vector>) <f64vector>)
  (definition public (present-quaternion quat))
  (definition public Cuboid)
  (definition public (cuboid left <fl> bottom <fl> back <fl> right <fl> top <fl> front <fl>) <f64vector>)
  (definition public (make-cuboid) <f64vector>)
  (definition public (copy-cuboid cub <f64vector>) <f64vector>)
  (definition public (cuboid-left cub <f64vector>) <fl>)
  (definition public (cuboid-bottom cub <f64vector>) <fl>)
  (definition public (cuboid-back cub <f64vector>) <fl>)
  (definition public (cuboid-right cub <f64vector>) <fl>)
  (definition public (cuboid-top cub <f64vector>) <fl>)
  (definition public (cuboid-front cub <f64vector>) <fl>)
  (definition public (cuboid-width cub <f64vector>) <fl>)
  (definition public (cuboid-height cub <f64vector>) <fl>)
  (definition public (cuboid-depth cub <f64vector>) <fl>)
  (definition public (cuboid-left-set! cub <f64vector> left <fl>) <void>)
  (definition public (cuboid-bottom-set! cub <f64vector> bottom <fl>) <void>)
  (definition public (cuboid-back-set! cub <f64vector> back <fl>) <void>)
  (definition public (cuboid-right-set! cub <f64vector> right <fl>) <void>)
  (definition public (cuboid-top-set! cub <f64vector> top <fl>) <void>)
  (definition public (cuboid-front-set! cub <f64vector> front <fl>) <void>)
  (definition public (cuboid-init! cub <f64vector> left <fl> bottom <fl> back <fl> right <fl> top <fl> front <fl>) <f64vector>)
  (definition public (cuboid-copy! dst <f64vector> src <f64vector>) <f64vector>)
  (definition public (cuboid-scalar*! res <f64vector> cub <f64vector> r <fl>) <f64vector>)
  (definition public Matrix)
  (definition public (matrix f0 <fl> f4 <fl> f8 <fl> f12 <fl> f1 <fl> f5 <fl> f9 <fl> f13 <fl> f2 <fl> f6 <fl> f10 <fl> f14 <fl> f3 <fl> f7 <fl> f11 <fl> f15 <fl>) <f64vector>)
  (definition public (make-matrix) <f64vector>)
  (definition public (copy-matrix mat <f64vector>) <f64vector>)
  (definition public (matrix-ref mat <f64vector> ind <fx>) <fl>)
  (definition public (matrix-set! mat <f64vector> ind <fx> val <Object>) <void>)
  (definition public (matrix=? m1 <f64vector> m2 <f64vector>) <bool>)
  (definition public (matrix-copy! dst <f64vector> src <f64vector>) <f64vector>)
  (definition public (debug-matrix mat)))
