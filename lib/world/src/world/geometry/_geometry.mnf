(manifest world.geometry

  (version 207012)
  (digest "baa80f444f4025396bb1018920be549ed3631fc2")
  (references (jazz.geometry PI PI*2 PI/2 degree->radian radian->degree)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional /= element)
              (jazz.language.runtime.kernel f64vector-ref f64vector-set! new random-real unspecified)
              (jazz.language.runtime.object Object)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros unless when)
              (scheme.language.runtime.kernel * + - / < = > >= abs acos asin atan ceiling cos floor length max min not sin sqrt tan values vector-length vector-ref)
              (world.geometry.base vertex* vertex*! vertex+ vertex+! vertex- vertex-! vertex-abs vertex-abs! vertex-decrease! vertex-increase! vertex-inverse vertex-inverse! vertex-max vertex-negate vertex-negate! vertex-norm vertex-norm! vertex-normalize vertex-normalize! vertex-normalize-safe vertex-normalize-safe! vertex-scalar* vertex-scalar*! vertex-scalar/ vertex-scalar/! vertex/ vertex/!)
              (world.geometry.classes Cuboid Matrix Quaternion Vertex clone-vertex copy-cuboid copy-matrix copy-vertex cuboid cuboid-back cuboid-back-set! cuboid-bottom cuboid-bottom-set! cuboid-copy! cuboid-depth cuboid-front cuboid-front-set! cuboid-height cuboid-init! cuboid-left cuboid-left-set! cuboid-right cuboid-right-set! cuboid-scalar*! cuboid-top cuboid-top-set! cuboid-width debug-matrix make-cuboid make-matrix make-quaternion make-vertex make-zero-vertex matrix matrix-copy! matrix-ref matrix-set! matrix=? present-quaternion present-vertex quaternion quaternion-copy! quaternion-init! quaternion-w quaternion-w-set! quaternion-x quaternion-x-set! quaternion-y quaternion-y-set! quaternion-z quaternion-z-set! vertex vertex-copy! vertex-hash vertex-init! vertex-x vertex-x-set! vertex-y vertex-y-set! vertex-z vertex-z-set! vertex-zero! vertex-zero? vertex/=? vertex=?)
              (world.geometry.syntax center-of-mass& closest-point-on-line& copy-movement& cross-normal& cross-normal-safe& cross-product& dot-product& f32& f64& fl& fx& inner-product& make-cuboid& make-f32& make-f64& make-fl& make-fx& make-identity-matrix& make-inverse-lookat-matrix& make-lookat& make-lookat-matrix& make-matrix& make-movement& make-plane& make-projection-matrix& make-quaternion& make-quaternion-matrix& make-rotation-matrix& make-scaling-matrix& make-translation-matrix& make-vertex& make-view-matrix& make-x-rotation-matrix& make-y-rotation-matrix& make-z-rotation-matrix& matrix-multiply& matrix-transform& movement-end& movement-end-to& plane-closest& plane-normal& quaternion& realign-lookat& realign-lookat-horizon& rotate-lookat& rotate-upon& vertex& vertex*& vertex+& vertex-& vertex-abs& vertex-copy& vertex-distance& vertex-inverse& vertex-negate& vertex-norm& vertex-normalize& vertex-normalize-safe& vertex-scalar*& vertex-scalar/& vertex/&)
              (world.homogeneous f32-init! f32-ref f64-init! f64-ref f64-set! make-f32 make-f64)
              (world.lookat LookAt (LookAt get-right) (LookAt get-sight) (LookAt get-up) (LookAt set-right) (LookAt set-sight) (LookAt set-up))
              (world.movement Movement (Movement get-normal) (Movement get-origin) (Movement get-vector) (Movement set-origin) (Movement set-vector))
              (world.parallelepiped Parallelepiped (Parallelepiped set-left/bottom/back) (Parallelepiped set-left/bottom/front) (Parallelepiped set-left/top/back) (Parallelepiped set-left/top/front) (Parallelepiped set-right/bottom/back) (Parallelepiped set-right/bottom/front) (Parallelepiped set-right/top/back) (Parallelepiped set-right/top/front))
              (world.plane Plane (Plane get-normal) (Plane get-origin))))
