(module world.geometry jazz
  (export (world.geometry.base))
  (export (world.geometry.classes))
  (export (world.geometry.syntax (phase syntax)))
  (import (jazz.geometry))
  (import (world.geometry.base))
  (import (world.geometry.classes))
  (import (world.geometry.syntax (phase syntax)))
  (import (world.homogeneous))
  (import (world.lookat))
  (import (world.movement))
  (import (world.parallelepiped))
  (import (world.plane))
  (import (world.syntax (phase syntax)))
  (definition protected EPSILON <fl>)
  (definition public (float-near? f1 <fl> f2 <fl>) <bool>)
  (definition public (vertex-distance v1 <f64vector> v2 <f64vector>) <fl>)
  (definition public (vertex-distance! res <f64vector> v1 <f64vector> v2 <f64vector>) <f64vector>)
  (definition public (vertex-near? v1 <f64vector> v2 <f64vector>) <bool>)
  (definition public (vertex-64->32 vert))
  (definition public (rotate-upon angle <fl> axis <f64vector> dir <f64vector>) <f64vector>)
  (definition public (rotate-upon! res <f64vector> angle <fl> axis <f64vector> dir <f64vector>) <f64vector>)
  (definition public (inner-product u <f64vector> v <f64vector>) <fl>)
  (definition public (inner-product! res <f64vector> u <f64vector> v <f64vector>) <f64vector>)
  (definition public (dot-product u <f64vector> v <f64vector>) <fl>)
  (definition public (dot-product! res <f64vector> u <f64vector> v <f64vector>) <f64vector>)
  (definition public (cross-product u <f64vector> v <f64vector>) <f64vector>)
  (definition public (cross-product! res <f64vector> u <f64vector> v <f64vector>) <f64vector>)
  (definition public (cross-normal u <f64vector> v <f64vector>) <f64vector>)
  (definition public (cross-normal! res <f64vector> u <f64vector> v <f64vector>) <f64vector>)
  (definition public (cross-normal-safe! res <f64vector> u <f64vector> v <f64vector>) <f64vector>)
  (definition public (plane-normal v1 <f64vector> v2 <f64vector> v3 <f64vector>) <f64vector>)
  (definition public (plane-normal! res <f64vector> v1 <f64vector> v2 <f64vector> v3 <f64vector>) <f64vector>)
  (definition public (plane-normal-safe v1 <f64vector> v2 <f64vector> v3 <f64vector>) <f64vector>)
  (definition public (plane-normal-safe! res <f64vector> v1 <f64vector> v2 <f64vector> v3 <f64vector>) <f64vector>)
  (definition public (vector-angle v1 <f64vector> v2 <f64vector>) <fl>)
  (definition public (vertical-angle dir <f64vector> up <f64vector>) <fl>)
  (definition public (plane-angle x1 <fl> y1 <fl> x2 <fl> y2 <fl>) <fl>)
  (definition public (triangle-center v1 <f64vector> v2 <f64vector> v3 <f64vector>) <f64vector>)
  (definition public (quad-center v1 <f64vector> v2 <f64vector> v3 <f64vector> v4 <f64vector>) <f64vector>)
  (definition public (center-of-mass vertices <vector>) <f64vector>)
  (definition public (center-of-mass! res <f64vector> vertices <vector>) <f64vector>)
  (definition public (polygon-normal vertices <vector>) <f64vector>)
  (definition public (polygon-normal! res <f64vector> vertices <vector>) <f64vector>)
  (definition public (polygon-radius center <f64vector> vertices <vector>) <fl>)
  (definition public (transform-normal normal <f64vector> inverse-matrix <f64vector>) <f64vector>)
  (definition public (transform-ray origin <f64vector> dir <f64vector> matrix <f64vector>) <values>)
  (definition public (transform-ray/normalize origin <f64vector> dir <f64vector> matrix <f64vector>) <values>)
  (definition public (ray-point-distance p <f64vector> d <f64vector> vert <f64vector>) <fl>)
  (definition public (ray-point-distance! res <f64vector> p <f64vector> d <f64vector> vert <f64vector>) <f64vector>)
  (definition public (ray-point-horizontal-distance p <f64vector> d <f64vector> v <f64vector>) <fl>)
  (definition public (ray-triangle-distance p <f64vector> d <f64vector> v0 <f64vector> v1 <f64vector> v2 <f64vector>) <fl>)
  (definition public (ray-triangle-distance! res <f64vector> p <f64vector> d <f64vector> v0 <f64vector> v1 <f64vector> v2 <f64vector>) <f64vector>)
  (definition public (ray-intersects-triangle? p <f64vector> d <f64vector> v0 <f64vector> v1 <f64vector> v2 <f64vector>) <bool>)
  (definition public (ray-intersects-sphere? p <f64vector> d <f64vector> s <f64vector> r <fl>) <bool>)
  (definition public (validate-vertex-normalized vert))
  (definition public (quaternion-inverse quat <f64vector>) <f64vector>)
  (definition public (quaternion-conjugate quat <f64vector>) <f64vector>)
  (definition public (quaternion-norm quat <f64vector>) <fl>)
  (definition public (quaternion-squared-norm quat <f64vector>) <fl>)
  (definition public (quaternion-scalar* quat <f64vector> r <fl>) <f64vector>)
  (definition public (quaternion-scalar/ quat <f64vector> r <fl>) <f64vector>)
  (definition public (quaternion-product q1 <f64vector> q2 <f64vector>) <f64vector>)
  (definition public (translate-matrix! res <f64vector> trans <f64vector>) <f64vector>)
  (definition public (euler-quaternion angles <f64vector>) <f64vector>)
  (definition public (euler-quaternion! res <f64vector> angles <f64vector>) <f64vector>)
  (definition public (quaternion-euler quat <f64vector>) <f64vector>)
  (definition public (quaternion-matrix! res <f64vector> quat <f64vector>) <f64vector>)
  (definition public (quaternion-slerp! res <f64vector> p <f64vector> q <f64vector> t <fl>) <f64vector>)
  (definition public (euler-radian->degree angles <f64vector>) <f64vector>)
  (definition public (euler-degree->radian angles <f64vector>) <f64vector>)
  (definition public (cuboid-size cuboid <f64vector>) <f64vector>)
  (definition public (cuboid-radiuses cuboid <f64vector>) <f64vector>)
  (definition public (cuboid-center cuboid <f64vector>) <f64vector>)
  (definition public (unit-cube pos))
  (definition public (compute-vertices-bounds proc) <f64vector>)
  (definition public (make-identity-matrix) <f64vector>)
  (definition public (make-identity-matrix! res <f64vector>) <f64vector>)
  (definition public (identity-matrix? mat <f64vector>) <bool>)
  (definition public (matrix-transpose-3x3! dst <f64vector> src <f64vector>) <void>)
  (definition public (matrix-multiply a <f64vector> b <f64vector>) <f64vector>)
  (definition public (matrix-multiply! res <f64vector> a <f64vector> b <f64vector>) <f64vector>)
  (definition public (matrix-transform mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform! res <f64vector> mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform-3x4 mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform-3x4! res <f64vector> mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform-normal inverse-mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform-normal! res <f64vector> inverse-mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix+-transform-3x4 mat <f64vector+> vert <f64vector>) <f64vector>)
  (definition public (matrix+-transform-3x4! res <f64vector> mat <f64vector+> vert <f64vector>) <f64vector>)
  (definition public (matrix-transform-3x4-offset! res <f64vector> mat <f64vector> vec <f64vector> offset <fx>) <f64vector>)
  (definition public (matrix+-transform-3x4-offset! res <f64vector> mat <f64vector+> vec <f64vector> offset <fx>) <f64vector>)
  (definition public (matrix-transform-3x4->offset! res <f64vector> offset <fx> mat <f64vector> vert <f64vector>) <f64vector>)
  (definition public (matrix+-transform-3x4->offset! res <f64vector> offset <fx> mat <f64vector+> vert <f64vector>) <f64vector>)
  (definition public (make-translation-matrix t <f64vector>) <f64vector>)
  (definition public (make-translation-matrix! res <f64vector> t <f64vector>) <f64vector>)
  (definition public (make-x-rotation-matrix phi <fl>) <f64vector>)
  (definition public (make-x-rotation-matrix! res <f64vector> phi <fl>) <f64vector>)
  (definition public (make-y-rotation-matrix theta <fl>) <f64vector>)
  (definition public (make-y-rotation-matrix! res <f64vector> theta <fl>) <f64vector>)
  (definition public (make-z-rotation-matrix psi <fl>) <f64vector>)
  (definition public (make-z-rotation-matrix! res <f64vector> psi <fl>) <f64vector>)
  (definition public (make-rotation-matrix r <f64vector>) <f64vector>)
  (definition public (make-rotation-matrix! res <f64vector> r <f64vector>) <f64vector>)
  (definition public (make-quaternion-matrix quat <f64vector>) <f64vector>)
  (definition public (make-quaternion-matrix! res <f64vector> quat <f64vector>) <f64vector>)
  (definition public (make-scaling-matrix s <f64vector>) <f64vector>)
  (definition public (make-scaling-matrix! res <f64vector> s <f64vector>) <f64vector>)
  (definition public (make-lookat-matrix lookat <LookAt>) <f64vector>)
  (definition public (make-lookat-matrix! res <f64vector> lookat <LookAt>) <f64vector>)
  (definition public (make-inverse-lookat-matrix lookat <LookAt>) <f64vector>)
  (definition public (make-inverse-lookat-matrix! res <f64vector> lookat <LookAt>) <f64vector>)
  (definition public (sphere-matrices! sphere-matrix <f64vector> inverse-matrix <f64vector> origin <f64vector> lookat <LookAt> radiuses <f64vector>) <void>)
  (definition public (make-projection-matrix fov <fl> ratio <fl> near <fl> far <fl>) <f64vector>)
  (definition public (make-projection-matrix! res <f64vector> fov <fl> ratio <fl> near <fl> far <fl>) <f64vector>)
  (definition public (make-view-matrix position <f64vector> lookat <LookAt>) <f64vector>)
  (definition public (make-view-matrix! res <f64vector> position <f64vector> lookat <LookAt>) <f64vector>)
  (definition public (matrix-translation mat <f64vector>) <f64vector>)
  (definition public (make-lookat) <LookAt>)
  (definition public (make-standard-lookat) <LookAt>)
  (definition public (lookat=? l1 <LookAt> l2 <LookAt>) <bool>)
  (definition public (lookat/=? l1 <LookAt> l2 <LookAt>) <bool>)
  (definition public (lookat-near? l1 <LookAt> l2 <LookAt>) <bool>)
  (definition public (lookat sight <f64vector> up <f64vector> right <f64vector>) <LookAt>)
  (definition public (lookat-init! lookat <LookAt> sight <f64vector> up <f64vector> right <f64vector>) <LookAt>)
  (definition public (copy-lookat lookat <LookAt>) <LookAt>)
  (definition public (lookat-copy! dst <LookAt> src <LookAt>) <LookAt>)
  (definition public (standardize-lookat! lookat <LookAt>) <void>)
  (definition public (realign-lookat! res <LookAt> lookat <LookAt> new-up <f64vector>) <LookAt>)
  (definition public (realign-lookat-horizon! res <LookAt> lookat <LookAt> up <f64vector> initial-gravity final-gravity) <LookAt>)
  (definition public (rotate-lookat-vertical! lookat <LookAt> angle <fl>) <void>)
  (definition public (rotate-lookat-vertical-up! lookat <LookAt> angle <fl> up <f64vector>) <void>)
  (definition public (rotate-lookat! res <LookAt> lookat <LookAt> angle <fl> axis <f64vector>) <LookAt>)
  (definition public (roll-free-up dir <f64vector>) <f64vector>)
  (definition public (remove-roll up <f64vector> right <f64vector>) <f64vector>)
  (definition public (validate-lookat-normalized lookat <LookAt>) <void>)
  (definition public (validate-lookat lookat <LookAt>) <void>)
  (definition public (present-lookat lookat <LookAt>) <void>)
  (definition public (parallelepiped left/bottom/back <f64vector> left/bottom/front <f64vector> left/top/back <f64vector> left/top/front <f64vector> right/bottom/back <f64vector> right/bottom/front <f64vector> right/top/back <f64vector> right/top/front <f64vector>) <Parallelepiped>)
  (definition public (make-parallelepiped) <Parallelepiped>)
  (definition public (gravity-up gravity <f64vector>) <f64vector>)
  (definition public (copy-movement mvt <Movement>) <Movement>)
  (definition public (copy-movement! dst <Movement> src <Movement>) <Movement>)
  (definition public (movement-end mvt <Movement>) <f64vector>)
  (definition public (movement-end! res <f64vector> mvt <Movement>) <f64vector>)
  (definition public (movement-end-to mvt <Movement> d <fl>) <f64vector>)
  (definition public (movement-end-to! res <f64vector> mvt <Movement> d <fl>) <f64vector>)
  (definition public (movement-transform-3x4 mvt <Movement> matrix <f64vector>) <void>)
  (definition public (movement-transform-3x4! mvt <Movement> matrix <f64vector>) <void>)
  (definition public (copy-plane plane <Plane>) <Plane>)
  (definition public (transform-plane plane <Plane> matrix <f64vector> inverse-matrix) <Plane>)
  (definition public (plane-to-point-distance plane <Plane> point <f64vector>) <fl>)
  (definition public (intersect-plane plane <Plane> r <Movement>) <values>)
  (definition public (intersect-plane! res <f64vector> plane <Plane> r <Movement>) <bool>)
  (definition public (plane-closest plane <Plane> point <f64vector>) <f64vector>)
  (definition public (plane-closest! res <f64vector> plane <Plane> point <f64vector>) <f64vector>)
  (definition public (closest-point-on-line-segment a <f64vector> b <f64vector> p <f64vector>) <values>)
  (definition public (closest-point-on-line-segment! res <f64vector> a <f64vector> b <f64vector> p <f64vector>) <bool>)
  (definition public (closest-point-on-line a <f64vector> b <f64vector> p <f64vector>) <f64vector>)
  (definition public (closest-point-on-line! res <f64vector> a <f64vector> b <f64vector> p <f64vector>) <f64vector>)
  (definition public (random-between min <fl> max <fl>) <fl>)
  (definition public (random-in max <fl>) <fl>)
  (definition public (random-direction)))
