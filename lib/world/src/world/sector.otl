(module world.sector jazz
  (import (gambit.log))
  (import (jazz.debuggee))
  (import (world))
  (import (world.autoload))
  (import (world.block))
  (import (world.camera))
  (import (world.configure))
  (import (world.face))
  (import (world.geometry))
  (import (world.log))
  (import (world.material))
  (import (world.mesh))
  (import (world.queue))
  (import (world.renderers))
  (import (world.section))
  (import (world.support))
  (import (world.syntax (phase syntax)))
  (import (world.task))
  (definition protected generate-queue <Priorities-Queue>)
  (definition public (push-content sector priority))
  (definition public (pop-content))
  (definition public (reset-content))
  (definition public (trim-content priority) <fx>)
  (definition protected (stop-generate))
  (definition protected (generate-task task <Task>))
  (definition public (get-current-content-revision) <fx>)
  (definition public (increase-current-content-revision))
  (class Sector extends Object
    (slot index <vector> getter generate)
    (slot center <f64vector> getter generate)
    (slot section <World-Section+> accessors generate)
    (slot blocks <list> accessors generate)
    (slot entities <list> accessors generate)
    (slot faces <list+> accessors generate)
    (slot other-faces <table+> accessors generate)
    (slot mesh <Mesh+> getter generate)
    (slot other-meshes <table+> accessors generate)
    (slot queued? <bool> accessors generate)
    (slot physical-uptodate? <bool> accessors generate)
    (slot content-uptodate? <bool> accessors generate)
    (slot content-revision <fx> accessors generate)
    (slot vertices-uptodate? <bool> accessors generate)
    (slot lightmap-uptodate? <bool> accessors generate)
    (slot generating? <bool> accessors generate)
    (method protected override (initialize index center))
    (method protected override (print output readably))
    (method protected final (setup-mesh))
    (method protected final (setup-other-meshes))
    (method protected final (iterate-meshes proc))
    (method protected final (free-mesh))
    (method public final (empty?))
    (method protected final (update))
    (method protected final (update-physical))
    (method protected final (update-content))
    (method protected final (install-mesh mesh <Mesh>))
    (method protected final (install-other-mesh material <Material> mesh <Mesh>))
    (method protected final (add-face face <Face>))
    (method protected final (add-block-faces))
    (method protected final (update-vertices))
    (method protected final (fill-faces-vertices mesh <Mesh> apparent-faces))
    (method protected final (fill-vertices/neighbors mesh <Mesh> triangles <fx+> vertices <f32vector+> neighbors <f32vector+>))
    (method protected final (prepare-vertices/neighbors apparent-faces))
    (method protected final (update-lightmaps))
    (method protected final (update-lightmap mesh <Mesh> faces))
    (method protected final (fill-faces-lightmap mesh <Mesh> faces))
    (method protected final (fill-lightmap mesh <Mesh> triangles <fx+> lightmap <f32vector+>))
    (method protected virtual (prepare-lightmap faces))))
