(manifest world.sector

  (version 207012)
  (digest "37d4b3a98fdeb725dd032a1abae13e79aef31413")
  (references (gambit.log log-transition)
              (jazz.debuggee present-current-loop-restart with-current-loop)
              (jazz.language.runtime.exception error with-restart-catcher)
              (jazz.language.runtime.format format format-plural)
              (jazz.language.runtime.functional Call-Site (Call-Site get-procedure) Object-Class register-site)
              (jazz.language.runtime.kernel +infinity continuation-capture continuation-return current-thread f32vector-length f32vector-ref f32vector-set! make-f32vector new table-clear unspecified)
              (jazz.language.runtime.object Object (Object initialize) (Object print) print-unreadable)
              (jazz.language.syntax.assertion allege assert)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros site when)
              (scheme.language.runtime.kernel * + < = > car cdr cons eq? for-each iterate-table length make-table not null? table-ref table-set! values vector-ref)
              (world *current-camera* *current-world* *current-zone*)
              (world.block Block (Block element-faces))
              (world.buffer (Buffer set-data))
              (world.camera Camera)
              (world.configure generate-spread generate-threaded?)
              (world.element (Element get-position) (Element get-sight))
              (world.entity (Entity cache-model))
              (world.face Face (Face add-triangles) (Face get-material) (Face get-polygon) (Face set-indice) (Face triangle-count))
              (world.geometry ray-point-horizontal-distance)
              (world.geometry.classes vertex-hash vertex-x vertex-y vertex-z vertex=?)
              (world.live World (World get-block-atlas) (World get-block-opaque) (World get-render-what))
              (world.log generate-id generate-parallel-state waiting-state with-log-context)
              (world.lookat (LookAt get-sight))
              (world.material Material (Material get-renderer))
              (world.mesh Mesh (Mesh allocate-lightmap) (Mesh allocate-neighbors) (Mesh allocate-vertices) (Mesh free-lightmap) (Mesh free-neighbors) (Mesh free-resources) (Mesh free-vertices) (Mesh get-lightmap-buffer) (Mesh get-neighbors-buffer) (Mesh get-vertices-buffer) (Mesh set-lightmap-data) (Mesh set-vertices-data) lightmap-floats neighbors-floats triangle-floats triangle-lightmap-floats triangle-neighbors-floats vertex-floats)
              (world.model (Model opaque-cube?))
              (world.polygon (Polygon get-center))
              (world.queue Priorities-Queue (Priorities-Queue pop) (Priorities-Queue push) (Priorities-Queue reset) (Priorities-Queue trim))
              (world.renderers get-opaque-renderer)
              (world.section World-Section)
              (world.support get-debug-lightmap? get-debug-meshes?)
              (world.syntax current-camera current-world current-zone)
              (world.task Task (Task ready-task) (Task set-context))
              (world.zone Zone (Zone generate-content) (Zone generate-content?) (Zone generate-physical) (Zone increase-sectors-generating) (Zone set-generate-thread))))
