(module world.camera jazz
  (import (jazz.geometry))
  (import (jazz.graphic.opengl.glew))
  (import (jazz.system))
  (import (world))
  (import (world.autoload))
  (import (world.dyes))
  (import (world.gadget))
  (import (world.geometry))
  (import (world.homogeneous))
  (import (world.lookat))
  (import (world.opengl))
  (import (world.serialization))
  (import (world.syntax (phase syntax)))
  (import (world.window))
  (definition public (make-camera))
  (definition public (camera-copy! dst src))
  (class Camera-Class extends (:class Gadget)
    (method protected override (marshall-object object))
    (method protected override (unmarshall-object content)))
  (class Camera metaclass Camera-Class extends Gadget
    (slot target <f64vector> getter generate)
    (slot dirty? <bool> getter generate)
    (slot stable? <bool> getter generate)
    (slot stable-since <fl+> getter generate)
    (slot stable-callback <Object> accessors generate)
    (slot screen-width <fl> accessors generate)
    (slot screen-height <fl> accessors generate)
    (slot projection <symbol> getter generate)
    (slot perspective-fov <fl> accessors generate)
    (slot perspective-near <fl> accessors generate)
    (slot perspective-far <fl> accessors generate)
    (slot view-distance <fl> accessors generate)
    (slot zoom-factor <fl> accessors generate)
    (slot frustum-radius <fl+> accessors generate)
    (slot frustum-left <f64vector> getter generate)
    (slot frustum-bottom <f64vector> getter generate)
    (slot frustum-right <f64vector> getter generate)
    (slot frustum-top <f64vector> getter generate)
    (slot frustum-left-dot <fl> getter generate)
    (slot frustum-bottom-dot <fl> getter generate)
    (slot frustum-right-dot <fl> getter generate)
    (slot frustum-top-dot <fl> getter generate)
    (slot move-speed <fl> accessors generate)
    (slot blink-speed <fl> accessors generate)
    (slot warp-speed <fl> accessors generate)
    (slot strafe-speed <fl> accessors generate)
    (slot rotate-speed <fl> accessors generate)
    (method protected override (prepare rest))
    (method protected virtual (camera-model))
    (method protected override (print output readably))
    (method protected final (size-change size))
    (method protected final (set-target vert <f64vector>) <void>)
    (method protected final (derive-target))
    (method protected final (reset-camera))
    (method protected final (init-stable))
    (method protected final (reset-stable))
    (method protected final (update-stable stable-delay))
    (method protected override (update-matrix))
    (method protected final (camera-update))
    (method protected final (dirty-update))
    (method protected final (prepare-projection))
    (method protected final (setup-camera))
    (method protected final (move-camera center-x))
    (method protected final (world->screen vertex))
    (method protected final (screen->ray h v))
    (method protected final (update-frustum))
    (method protected final (frustum-normals! left-normal <f64vector> bottom-normal <f64vector> right-normal <f64vector> top-normal <f64vector>) <void>)
    (method protected final (in-frustum? pos <f64vector>) <bool>)
    (method protected final (zoom-speed))
    (method protected final (zoom-in))
    (method protected final (zoom-out))
    (method protected final (get-camera-me))
    (method protected final (move-forward))
    (method protected final (move-backward))
    (method protected final (blink-forward))
    (method protected final (blink-backward))
    (method protected final (warp-forward))
    (method protected final (warp-backward))
    (method protected final (move-left))
    (method protected final (move-right))
    (method protected final (move-horizontally d))
    (method protected final (move-up))
    (method protected final (move-down))
    (method protected final (rotate-left))
    (method protected final (rotate-right))
    (method protected final (rotate-horizontal angle))
    (method protected final (rotate-up))
    (method protected final (rotate-down))
    (method protected final (rotate-vertical angle))
    (method protected final (rotate-vertical-up angle up))
    (method protected final (draw-orientation))
    (method protected override (history-draw-now?))))
