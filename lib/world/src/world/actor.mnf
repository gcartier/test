(manifest world.actor

  (version 207012)
  (digest "4336f0ca32a2635eaa72979e3c4f9b56b8e44402")
  (references (jazz.language.runtime.debug break)
              (jazz.language.runtime.functional /= (Class marshall-object) (Class unmarshall-object) Object-Class neq? serialize-object)
              (jazz.language.runtime.kernel class-of continuation-return current-seconds mutex-unlock! new not-null? random-real unspecified)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.increase decrease! increase!)
              (jazz.language.syntax.macros site unless when)
              (jazz.library.component.Component (Component child) (Component get-name))
              (jazz.system find-setting)
              (scheme.language.runtime.kernel * + - / < <= > car cdr dynamic-wind eq? equal? for-each list not values vector vector-ref)
              (world *current-camera* *current-me* *current-motion* *current-world* *current-zone*)
              (world.camera Camera (Camera camera-update))
              (world.collision collide&slide collide&stop)
              (world.commands Commands (Commands get-blink-backward?) (Commands get-blink-forward?) (Commands get-command?) (Commands get-jump?) (Commands get-modified?) (Commands get-move-backward?) (Commands get-move-down?) (Commands get-move-forward?) (Commands get-move-left?) (Commands get-move-right?) (Commands get-move-up?) (Commands get-rotate-left?) (Commands get-rotate-right?))
              (world.dye copy-dye dye-alpha-set!)
              (world.element (Element color) (Element finish) (Element get-lookat) (Element get-radius) (Element get-radius-y) (Element get-sight) (Element get-up) (Element get-y) (Element lookat) (Element position) (Element realign-lookat) (Element set-lookat) (Element set-position) (Element update-matrix))
              (world.entity Entity (Entity cache-model) (Entity change-morphing) (Entity draw-target) (Entity draw-target-circle) (Entity transformed-center) (Entity transformed-radiuses) (Entity transition-morphing))
              (world.geometry cross-normal cross-normal! dot-product gravity-up make-lookat realign-lookat-horizon! remove-roll vertex-distance)
              (world.geometry.base vertex+ vertex+! vertex- vertex-decrease! vertex-increase! vertex-norm vertex-normalize vertex-normalize-safe! vertex-scalar* vertex-scalar*! vertex-scalar/)
              (world.geometry.classes copy-vertex make-vertex make-zero-vertex vertex-copy! vertex-init! vertex-x-set! vertex-y vertex-y-set! vertex-zero! vertex-zero?)
              (world.geometry.syntax cross-normal& make-lookat& make-vertex& realign-lookat-horizon& vertex+& vertex-normalize-safe& vertex-scalar*&)
              (world.history break-logic? breaked-logic-at)
              (world.live World (World compute-gravity) (World editor-add) (World editor-delete) (World follow-player) (World get-eye) (World get-fly?) (World get-free-aim?) (World get-history) (World get-jump-impulsion) (World get-paused?) (World hook-action) (World hook-commands) (World lose) (World missile-class) (World play-sound-file) (World player-lens) (World process-idleness) (World remove-element) (World update-parameter) (World update-world-up) (World vehicle-speed))
              (world.lookat (LookAt get-right) (LookAt get-sight) (LookAt get-up) (LookAt set-sight) (LookAt set-up))
              (world.model (Model find-animation) (Model get-pumps))
              (world.motion Motion (Motion eye-center-player) person-motion?)
              (world.player Player)
              (world.serialization deserialize serialize)
              (world.spell Spell)
              (world.syntax break-logic current-camera current-me current-motion current-world current-zone properties)
              (world.task task-mutex)
              (world.zone Zone (Zone add-element) (Zone get-floor-level) (Zone needs-pumps?) (Zone update-element))))
