(manifest world.live

  (version 207012)
  (digest "b93fdfbb0565bfc8accf28f349dd905955b8f9a4")
  (references (gambit.log log-transition setup-logging-heartbeat!)
              (jazz.debuggee clear-console get-controller-debugger present-current-loop-restart with-current-loop)
              (jazz.geometry PI*2 PI/4 center)
              (jazz.graphic.Color Color)
              (jazz.graphic.font.Font Font (Font text-width))
              (jazz.graphic.literals construct-color construct-font)
              (jazz.graphic.opengl.glew gl-check-error)
              (jazz.graphic.opengl.glew.foreign glFog4f glGetInteger*)
              (jazz.graphic.opengl.glew.header GL_ALPHA_TEST GL_BLEND GL_COLOR_BUFFER_BIT GL_CW GL_DEPTH_BUFFER_BIT GL_DEPTH_TEST GL_FILL GL_FOG GL_FOG_COLOR GL_FOG_COORD_SRC GL_FOG_DENSITY GL_FRAGMENT_DEPTH GL_FRONT_AND_BACK GL_LIGHT0 GL_LIGHT1 GL_LIGHTING GL_LINE GL_LINES GL_LINE_SMOOTH GL_MAX_VERTEX_UNIFORM_COMPONENTS GL_MODELVIEW GL_NORMALIZE GL_ONE_MINUS_SRC_ALPHA GL_POINT GL_PROJECTION GL_SMOOTH GL_SRC_ALPHA GL_TEXTURE_2D glBegin glBlendFunc glClear glClearColor glDisable glEnable glEnd glFogf glFogi glFrontFace glLineWidth glLoadIdentity glMatrixMode glOrtho glPolygonMode glPopMatrix glPushMatrix glShadeModel glTranslatef glVertex3f)
              (jazz.graphic.opengl.window OpenGL-Window (OpenGL-Window render-scene) (OpenGL-Window render-sync) (OpenGL-Window toggle-windowed-mode))
              (jazz.io Directory (Directory new-file) (Pathname create-directories) (Pathname exists?) extension=? extract-base extract-extension filename=? make-filename path-settings)
              (jazz.io.literals construct-directory)
              (jazz.jml pretty-print-forms?)
              (jazz.jrm get-local-register get-remote-register)
              (jazz.language.runtime.debug debug)
              (jazz.language.runtime.exception error signal-cancel with-restart-catcher)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string /= Call-Site (Call-Site get-procedure) Object-Class (Sequence sequence-element) (Sequence sequence-last) append! associate between? capitalize concatenate di<? find find-if first fxround fxround/ join last member? memq? near? neq? next-element nu- percent previous-element random-element register-site remove! remove-false search second sleep some? sort split)
              (jazz.language.runtime.geometry Dimension Point)
              (jazz.language.runtime.kernel add-gc-interrupt-job! bitwise-ior call-process class-of clear-terminal continuation-capture continuation-return current-seconds current-thread enqueue f64vector-ref flalloc flonum? gc install-repository is? last-gc-real-time load-script nan? new new-queue not-null? object->u8vector object-copy queue-list repository-name table-clear terminal u8vector->object unspecified)
              (jazz.language.runtime.object (Object object-capitalize) print-unreadable)
              (jazz.language.runtime.platform bell)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.ecase ecase)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.loop loop)
              (jazz.language.syntax.macros site unless when)
              (jazz.language.syntax.typecase typecase)
              (jazz.library.component.Component Component (Component add-child) (Component child) (Component children) (Component destroy) (Component destroy-component) (Component find-type) (Component finish) (Component get-children) (Component get-name) (Component get-visible?) (Component prepare) (Component print) (Component set-name))
              (jazz.library.exemplar (Exemplar copy-object))
              (jazz.literals construct-dimension)
              (jazz.media.platform.glfw close-music open-music play-music play-sound)
              (jazz.platform.cairo CAIRO_OPERATOR_CLEAR CAIRO_OPERATOR_OVER)
              (jazz.project locator->entry)
              (jazz.system find-setting modifiers-keys)
              (jazz.system.access get-application get-process)
              (jazz.system.platform.glfw alt-down? control-down? key-down? shift-down?)
              (jazz.ui shortcut=?)
              (jazz.ui.action.Shortcut Shortcut)
              (jazz.ui.dialog.platform.glfw choose-new-file)
              (jazz.ui.literals construct-shortcut)
              (jazz.ui.view get-focus)
              (jazz.ui.view.View View (View invalidate-view) (View set-size))
              (jazz.ui.window.View-Player (View-Player set-root))
              (jazz.ui.window.Window (Window get-size) (Window mouse-position) (Window set-mouse-position) (Window set-title))
              (jazz.ui.window.platform.glfw hide-cursor show-cursor symbolic-key->code)
              (scheme.language.runtime.kernel * + - / < <= = > >= append apply assoc assq cadr call-with-input-file car cddr cdr char->integer char? compose-reference cons debug-user? eof-object? eq? equal? eqv? for-each iterate-table list make-table max min not null? pair? procedure? read symbol->string symbol? table-ref table-set! values vector vector-ref)
              (time time->seconds)
              (world *current-camera* *current-me* *current-motion* *current-world* *current-world-window* *current-zone* set-current-camera set-current-me set-current-motion set-current-world world-version)
              (world.actor Actor (Actor get-self-wound-grace) (Actor wound))
              (world.area Area (Area get-visit) (Area iterate-entities) (Area iterate-polygons) (Area set-visit))
              (world.atlas Atlas (Atlas add-directory-if-exists) (Atlas complete) (Atlas get-texture))
              (world.block Block)
              (world.camera Camera (Camera camera-update) (Camera derive-target) (Camera draw-orientation) (Camera get-stable?) (Camera get-target) (Camera prepare-projection) (Camera reset-camera) (Camera screen->ray) (Camera set-blink-speed) (Camera set-move-speed) (Camera set-rotate-speed) (Camera set-stable-callback) (Camera set-strafe-speed) (Camera set-target) (Camera set-warp-speed) (Camera set-zoom-factor) (Camera setup-camera) (Camera size-change) (Camera update-stable) camera-copy! make-camera)
              (world.collision collide&stop get-debug-collisions? set-collide-max-slide set-debug-collisions?)
              (world.commands Commands (Commands complete) deserialize-commands)
              (world.configure camera-stable-delay log-heartbeat? player-rate render-rate-busy render-rate-busy-generate render-rate-idle render-rate-idle-generate tick-rate)
              (world.debug setup-info target-update)
              (world.defaults default-start-distance default-start-eye default-start-eye-sight default-start-eye-up default-start-position default-start-sight default-start-up)
              (world.draw draw-plane draw-polygon gl-segment-circle)
              (world.dye dye?)
              (world.dyes blue-dye green-dye red-dye white-dye yellow-dye)
              (world.element Element (Element draw-target) (Element element-polygons) (Element get-lookat) (Element get-position) (Element get-radius) (Element get-radius-y) (Element get-right) (Element get-sight) (Element get-up) (Element get-user-data) (Element get-y) (Element set-color) (Element set-lookat) (Element set-position) (Element set-right) (Element set-sight) (Element set-up) (Element set-y) (Element target-moveable?))
              (world.enemy Missile)
              (world.entities register-entity-classes)
              (world.entity Entity (Entity cache-model) (Entity for-each-bounding-quad) (Entity transformed-center))
              (world.external.milkshape load-ms3d)
              (world.external.obj load-obj)
              (world.fog default-fog-color default-fog-density get-fog-color get-fog-density get-fog? set-fog-color set-fog-density set-fog?)
              (world.folio Folio (Folio get-current) (Folio get-list) (Folio set-current))
              (world.foreign glDeleteTextures*)
              (world.gadget Gadget registered-gadget)
              (world.generate ray-closest-cuboid-inner-quad)
              (world.geometry cross-normal! cuboid-radiuses dot-product gravity-up inner-product make-identity-matrix plane-angle ray-intersects-sphere? unit-cube validate-vertex-normalized vertex-distance)
              (world.geometry.base vertex+ vertex+! vertex- vertex-! vertex-negate vertex-normalize! vertex-scalar* vertex-scalar*!)
              (world.geometry.classes copy-matrix copy-vertex cuboid-height make-vertex present-vertex vertex vertex-copy! vertex-init! vertex-x vertex-y vertex-z vertex=?)
              (world.geometry.syntax cross-normal& fl& make-fl& make-vertex& vertex& vertex-& vertex-copy& vertex-normalize& vertex-scalar*&)
              (world.gravity default-gravity default-jump)
              (world.history History Moment)
              (world.homogeneous fl-init!)
              (world.interface World-Interface (World-Interface draw-interface) character-pane-properties info-pane-properties profiler-pane-properties script-pane-properties target-pane-properties)
              (world.interface.actions World-Actionbar World-Parameter-Button (World-Parameter-Button get-parameter))
              (world.interface.animations Animations-Showcase)
              (world.interface.assets Model-Import)
              (world.interface.bindings World-Bindings-Viewer)
              (world.interface.blocks Blocks-Showcase)
              (world.interface.character Character-Pane)
              (world.interface.dialogs World-Dialog open-message open-string)
              (world.interface.documents World-Formatted-Text-View open-document)
              (world.interface.frame open-frame)
              (world.interface.gadgets Gadgets-Showcase)
              (world.interface.info Info-Pane)
              (world.interface.main World-Main-Menu)
              (world.interface.menu open-menu)
              (world.interface.meshes Meshes-Showcase)
              (world.interface.models Models-Showcase)
              (world.interface.options World-Audio-Options World-Interface-Options World-Video-Options)
              (world.interface.panel World-Panel)
              (world.interface.profiler Profiler-Pane)
              (world.interface.script Script-Pane)
              (world.interface.scripts Script-Run)
              (world.interface.shaders Shaders-Showcase)
              (world.interface.showcase World-Showcase (World-Showcase activate) (World-Showcase deactivate) (World-Showcase draw-showcase) (World-Showcase get-selection) (World-Showcase selection-addable?) (World-Showcase showcase-mouse-down) (World-Showcase showcase-wheel))
              (world.interface.skyboxes Skyboxes-Showcase)
              (world.interface.target Target-Pane)
              (world.interface.textures Textures-Showcase)
              (world.interface.tiles Tiles-Showcase)
              (world.interface.worlds World-Open)
              (world.interface.zones Zone-Open)
              (world.io new-world new-zone open-tutorial-zone open-welcome-zone open-world open-zone zone-filename)
              (world.keys iterate-keys register-keys)
              (world.log current-log-context heartbeat-state player-id player-sequential-state read-render-event render-id render-sequential-state render-sync-state setup-logs support-state tick-id tick-sequential-state with-log-context)
              (world.lookat (LookAt get-right) (LookAt get-sight) (LookAt get-up))
              (world.mark Vertex-Mark)
              (world.material Material)
              (world.mesh Mesh)
              (world.model load-model-metadata registered-model)
              (world.motion Motion (Motion blink-backward) (Motion blink-forward) (Motion eye-behind-actor) (Motion eye-behind-player) (Motion eye-center-player) (Motion follow-actor) (Motion follow-player) (Motion move-backward) (Motion move-down) (Motion move-forward) (Motion move-left) (Motion move-right) (Motion move-up) (Motion process-roll) (Motion reset-roll) (Motion restore-desired-distance) (Motion rotate-left) (Motion rotate-right) (Motion track-camera) (Motion warp-backward) (Motion warp-forward) (Motion zoom-in) (Motion zoom-out) free-motion? get-autotrack-camera? get-cursor-mode? get-independant-camera? get-recenter-mouse? make-free-motion make-orbit-motion make-person-motion orbit-motion? person-motion? set-autotrack-camera? set-cursor-mode? set-independant-camera? set-recenter-mouse? set-track-sensitivity)
              (world.opengl gl-colorize-dye gl-reset-color)
              (world.parameters registered-parameter)
              (world.planet Planet)
              (world.player Player (Player control) (Player effective-controlled) (Player get-controlled) (Player get-state) (Player idle) (Player relinquish-control) (Player space) (Player update-model))
              (world.polygon Polygon)
              (world.profiling advise-sites reset-sites site-profile-called site-profile-called-set! site-profile-running site-profile-running-set! unadvise-sites)
              (world.programs Mesh-Color-Program Mesh-Floorframe-Program Mesh-Fly-Program Mesh-Julia-Program Mesh-Kaleidoscope-Program Mesh-Motion-Blur-Program Mesh-Multitexture-Program Mesh-Occlusion-Program Mesh-Phong-Program Mesh-Playerframe-Program Mesh-Program (Mesh-Program bind-render-uniforms) (Mesh-Program bind-uniforms) (Mesh-Program draw-mesh) (Mesh-Program unbind-render-uniforms) (Mesh-Program unbind-uniforms) Mesh-Pulse-Program Mesh-Radial-Blur-Program Mesh-Sierpinski-Program Mesh-Square-Tunnel-Program Mesh-Squareframe-Program Mesh-Tunnel-Program Mesh-Water-Program Mesh-Wet-Program Mesh-Wireframe-Program update-transformation-time)
              (world.quad Quad)
              (world.render Render-Target (Render-Target activate) (Render-Target blit) (Render-Target deactivate) (Render-Target free-resources) (Render-Target resize))
              (world.renderer get-occlusion? get-wireframe? prepare-renderes register-entities register-meshes render-character render-opaque render-transparent set-occlusion? set-override-renderer set-wireframe?)
              (world.renderers get-occlusion-renderer get-wireframe-renderer require-renderer reset-renderes)
              (world.scene (Scene tick-scene))
              (world.script test0 test1 test2 test3 test4 test5 test6 test7 test8 test9)
              (world.sector Sector (Sector get-entities) (Sector get-mesh) (Sector get-other-meshes) (Sector set-lightmap-uptodate?) (Sector set-vertices-uptodate?) increase-current-content-revision trim-content)
              (world.serialization deserialize serialize)
              (world.settings world-alias world-file world-setting)
              (world.shader (Shader-Program detach-shaders) (Shader-Program unuse) (Shader-Program use))
              (world.shaders build-color-shaders build-default-shaders build-frame-shaders build-occlusion-shaders build-phong-shaders build-transformation-shaders)
              (world.skybox prepare-skyboxes)
              (world.support get-framebuffer-blit? get-framebuffer-multisample? get-framebuffer-objects? get-texture-arrays? set-animations? set-debug-animations? set-debug-lightmap? set-debug-meshes? set-debug-ms3d? set-debug-w3d?)
              (world.syntax current-camera current-me current-motion current-world current-world-window current-zone current-zone+)
              (world.target Mover Rotater Scaler)
              (world.task Task (Task ready-task) (Task set-context) task-sleep task-stopping? task-wakeup with-task-mutex)
              (world.texture make-cairo-texture make-file-texture)
              (world.triangle Triangle)
              (world.w3d load-w3ds)
              (world.widget Widget (Widget draw-widget) ray-closest-widget)
              (world.window World-Window (World-Window set-window-cursor) with-window-cursor)
              (world.zone Zone (Zone add-element) (Zone add-mark) (Zone before-close) (Zone decrease-sectors-generating) (Zone determine-path) (Zone draw-eye-neighbors) (Zone draw-zone) (Zone element-at) (Zone element-near) (Zone element-sector) (Zone find-element) (Zone get-actors) (Zone get-area-size) (Zone get-designer) (Zone get-draw-me?) (Zone get-editable-warned?) (Zone get-floor-level) (Zone get-missile-behavior) (Zone get-modified?) (Zone get-moniker) (Zone get-players) (Zone get-sectors-generating) (Zone get-start-distance) (Zone get-start-eye) (Zone get-start-eye-sight) (Zone get-start-eye-up) (Zone get-start-mode) (Zone get-start-position) (Zone get-start-sight) (Zone get-start-up) (Zone invalidate-lightmaps) (Zone iterate-gravities) (Zone iterate-position-neighbor-areas) (Zone load-zone) (Zone position-area-index) (Zone remove-duplicate-blocks) (Zone remove-element) (Zone reset-all-marks) (Zone save-exit) (Zone set-draw-me?) (Zone set-editable-warned?) (Zone set-missile-behavior) (Zone set-modified?) (Zone setup-lighting) (Zone snapshot-zone) (Zone target-update) (Zone toggle-debug-areas) (Zone toggle-debug-sectors) (Zone zone-destructible?) (Zone zone-editable?))))
