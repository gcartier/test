(module world.external jazz
  (import (jazz.io))
  (import (zlib))
  (import (world.binary))
  (import (world.foreign))
  (class Binary-Stream extends Object
    (slot content <u8vector> getter generate)
    (slot position <fx> getter generate)
    (method protected override (initialize file/content (compressed?: compressed? (unspecified))))
    (method public final (<-s8))
    (method public final (<-u8))
    (method public final (<-u8vector size <fx>))
    (method public final (<-s16))
    (method public final (<-s16-big-endian))
    (method public final (<-u16))
    (method public final (<-s32))
    (method public final (<-s32-big-endian))
    (method public final (<-s64))
    (method public final (<-s64-big-endian))
    (method public final (<-float))
    (method public final (<-floats! vec <f64vector>))
    (method public final (<-float-big-endian))
    (method public final (<-double))
    (method public final (<-double-big-endian))
    (method public final (<-string size <fx>))
    (method public final (<-utf-8-string size <fx>)))
  (class Binary-Writer extends Object
    (slot file <File> getter generate)
    (slot compressed? <bool> getter generate)
    (slot port <port> getter generate)
    (slot buffer <u8vector> getter generate)
    (method protected override (initialize file (compressed?: compressed? (unspecified))))
    (method protected override (destroy))
    (method public final (get-content) <u8vector>)
    (method public final (->s8 val))
    (method public final (->u8 val))
    (method public final (->s16 val))
    (method public final (->s16-big-endian val))
    (method public final (->u16 val))
    (method public final (->s32 val))
    (method public final (->s32-big-endian val))
    (method public final (->s64 val))
    (method public final (->s64-big-endian val))
    (method public final (->float val))
    (method public final (->float-big-endian val))
    (method public final (->double val))
    (method public final (->double-big-endian val))
    (method public final (->utf-8-string val))
    (method public final (->u8vector val <u8vector>)))
  (definition public (load-file-content file)))
