(module world.external.minecraft jazz
  (import (jazz.debuggee))
  (import (jazz.geometry))
  (import (jazz.graphic.opengl.glew))
  (import (jazz.io))
  (import (jazz.jml))
  (import (jazz.system))
  (import (jazz.ui))
  (import (world))
  (import (world.area))
  (import (world.atlas))
  (import (world.autoload))
  (import (world.chunk))
  (import (world.dye))
  (import (world.external.minecraft-syntax (phase syntax)))
  (import (world.external.nbt))
  (import (world.face))
  (import (world.generate))
  (import (world.geometry))
  (import (world.homogeneous))
  (import (world.info))
  (import (world.log))
  (import (world.material))
  (import (world.mesh))
  (import (world.profiling))
  (import (world.quad))
  (import (world.region))
  (import (world.renderers))
  (import (world.section))
  (import (world.sector))
  (import (world.settings))
  (import (world.syntax (phase syntax)))
  (import (world.task))
  (import (world.texture))
  (definition protected aa)
  (definition protected oo)
  (definition protected gg)
  (definition protected ww)
  (definition protected cc)
  (class Minecraft-Face extends Face
    (slot l1 accessors generate)
    (slot l2 accessors generate)
    (slot l3 accessors generate)
    (slot l4 accessors generate)
    (method protected override (initialize material texture-coordinates texture-depth polygon l1 l2 l3 l4))
    (method protected final (iterate-lighting proc)))
  (class Minecraft-Mesher extends Mesher
    (method protected final (add-lighting face <Minecraft-Face>)))
  (class Minecraft-Rendering extends Object
    (slot material <Material> getter generate)
    (slot mesher <Mesher> getter generate)
    (method protected override (initialize initial-reserved material))
    (method protected final (reset-mesher)))
  (definition package opaque-rendering)
  (definition package transparent-rendering)
  (definition package coverage-rendering)
  (definition package water-rendering)
  (definition package wet-rendering)
  (definition package multitexture-rendering)
  (definition package (dr))
  (class Minecraft-Block-Model extends Object
    (slot name getter generate)
    (slot id getter generate)
    (slot subid getter generate)
    (slot texture getter generate)
    (slot texture-coordinates accessors generate)
    (slot rendering getter generate)
    (slot rendering-cache getter generate)
    (slot opaque-cube? getter generate)
    (slot water-cube? getter generate)
    (slot generate getter generate)
    (method protected override (initialize name id subid texture rendering opaque-cube? water-cube? generate))
    (method protected override (print output readably))
    (method protected final (cache-rendering)))
  (definition public (blockid->block id <fx>) <Minecraft-Block-Model>)
  (definition protected tile-resolution <fx>)
  (definition protected tile-size <fl>)
  (definition protected tile-period <fx>)
  (definition protected texture-size <fl>)
  (definition protected texture-dir)
  (definition protected texture-mipmap?)
  (definition public block-radius <fl>)
  (definition public air-id <fx>)
  (class Minecraft-Section extends World-Section)
  (class Minecraft-Chunk extends World-Chunk
    (slot tag getter generate)
    (slot heightmap <vector+> getter generate)
    (slot entities getter generate)
    (method protected override (initialize sections tag heightmap entities)))
  (class Minecraft-Region extends World-Region
    (method protected override (deserialize-chunk chunk-data <u8vector>) <Minecraft-Chunk>)
    (method protected override (serialize-chunk chunk <Minecraft-Chunk>) <u8vector>))
  (definition public (import-minecraft-level file))
  (definition protected day-duration <fl>)
  (definition protected dawn-daytime <fl>)
  (definition protected day-daytime <fl>)
  (definition protected dusk-daytime <fl>)
  (definition protected night-daytime <fl>)
  (class Minecraft-Zone extends Zone
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms))
    (property level-dir <Directory> accessors generate)
    (property truncate-y <fx+> accessors generate)
    (property player-glow <fl> accessors generate)
    (method protected override (minecraft?))
    (method protected override (needs-pumps?))
    (method protected override (prepare rest))
    (method protected override (finish rest))
    (method protected override (destroy))
    (method protected override (effective-lights))
    (method protected override (effective-player-glow))
    (method protected override (sun-light?))
    (method protected override (sun-update-lighting effective coord))
    (method protected override (sun-update))
    (method protected final (goto-daytime daytime))
    (method protected final (update-daylight))
    (method protected final (sun-angle->daytime sun-angle))
    (method protected final (daytime->sun-angle daytime))
    (method protected final (effective-daytime daytime))
    (method protected override (create-atlas))
    (method protected override (create-atlas-nearest))
    (method protected override (create-opaque-material atlas))
    (method protected override (create-transparent-material atlas))
    (method protected override (sample-program-image program))
    (method protected override (zone-editable?))
    (method protected override (zone-destructible?))
    (method protected override (region-class))
    (method protected override (get-regions-dir) <Directory>)
    (method protected final (on-toggle-player-glow evt))
    (method protected override (generate-content?))
    (method protected override (generate-content sector <Sector>))
    (method protected override (generate-physical sector <Sector>))
    (method protected final (generate-sector sector <Sector> what))
    (method protected virtual (sector-generated sector))
    (method protected final (minecraft-blocks))
    (method protected final (minecraft-blockids))
    (method protected final (minecraft-block-model block <Minecraft-Block-Model> x y z))
    (method protected override (target-update target face face-rank poly)))
  (definition public (make-minecraft-face rendering <Minecraft-Rendering> texture-coordinates texture-depth polygon l1 l2 l3 l4))
  (definition public (left-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (left-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (right-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (right-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (bottom-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (bottom-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (top-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (top-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (back-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (back-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (front-side i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering))
  (definition public (front-face i <fx> j <fx> k <fx> left <fl> right <fl> bottom <fl> top <fl> back <fl> front <fl> uv <f32vector> lighting rendering))
  (definition public (add-cube-faces i <fx> j <fx> k <fx> x <fl> y <fl> z <fl> uv <f32vector> lighting rendering add-face))
  (definition public (add-cross-faces x <fl> y <fl> z <fl> uv <f32vector> lighting rendering add-face))
  (class Minecraft-World extends World))
