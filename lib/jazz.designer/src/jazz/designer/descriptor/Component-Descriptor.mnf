(manifest jazz.designer.descriptor.Component-Descriptor

  (version 207012)
  (digest "4614a3d4e85d882e2938afe5fb59161f8fb30515")
  (references (jazz.designer get-domain-category)
              (jazz.designer.descriptor Component-Meta-Descriptor)
              (jazz.designer.descriptor.Children-Descriptor Children-Descriptor)
              (jazz.designer.descriptor.Properties-Descriptor Properties-Descriptor)
              (jazz.designer.descriptor.Property-Descriptor Property-Descriptor)
              (jazz.designer.domain.Boolean-Domain Boolean-Domain)
              (jazz.designer.domain.Name-Domain Name-Domain)
              (jazz.designer.domain.Presentation-Domain Presentation-Domain)
              (jazz.designer.domain.Value-Domain Value-Domain)
              (jazz.designer.surrogate.Component-Surrogate Component-Surrogate)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.functional ->string Object-Class capitalize category-name either empty-string? every? flatten join memq? remove-duplicates remove-enclosing some? sort split substitute)
              (jazz.language.runtime.kernel boolean class-of dispatch field-name new resolve-runtime-reference subtype? unspecified)
              (jazz.language.runtime.object (Object object-capitalize))
              (jazz.language.syntax.macros when ~)
              (jazz.library require-property-descriptor)
              (jazz.library.component.Component Component (Component child) (Component setup-component) (Component~Class get-class-descriptor) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.component.Trait Trait)
              (jazz.library.literals construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.ui.clipboard get-jazz-parcels)
              (jazz.ui.clipboard.platform.glfw clipboard-format-available?)
              (scheme.language.runtime.kernel = apply car cons equal? for-each length list list->table map not string->symbol)
              (scheme.syntax declaration-path)))
