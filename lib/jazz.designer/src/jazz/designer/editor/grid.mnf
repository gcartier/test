(manifest jazz.designer.editor.grid

  (version 207012)
  (digest "7fa4a21db6ec091f39ed365eb1f0de2abe3adf34")
  (references (jazz.designer.domain.Class-Reference-Domain Class-Reference-Domain)
              (jazz.designer.editor.Component-Editor Component-Editor (Component-Editor designer) (Component-Editor install) (Component-Editor~Class host-icon))
              (jazz.designer.toolbox.Toolbox-Tree Toolbox-Tree (Toolbox-Tree selected-class))
              (jazz.designer.view can-copy-components? can-cut-components? can-delete-components? can-modify-components? can-paste-components? component-addable-classes request-component-presentation)
              (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.jml construct-form get-class-form-with-origin locators-ref)
              (jazz.jml.syntax <form> form)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional Object-Class Property (Sequence sequence-element) append-map assq-value class-ascendant collect collect-if collect-type const difference either element every? find find-if first iota is-not? list-set! make-list memq? neq? nu=? read-property remove-duplicates remove-false second zip)
              (jazz.language.runtime.geometry Cell (Cell get-col) (Cell get-line) Dimension cell=?)
              (jazz.language.runtime.kernel category-field class-of dispatch is? new not-null? resolve-runtime-reference serialize-runtime-reference subclass? unspecified)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros unless when ~)
              (jazz.language.syntax.typecase typecase)
              (jazz.library get-descriptor get-properties-descriptor get-property-descriptor)
              (jazz.library.component common-ancestor component-owned? determine-unique-paster)
              (jazz.library.component.Component Component (Component add-child) (Component get-parent) (Component locate) (Component parent) (Component~Class get-class-form) (Component~Class get-class-forms) (Component~Class set-class-form))
              (jazz.library.handler.Event-Handler Event-Handler)
              (jazz.library.literals construct-event-handler construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.literals construct-dimension)
              (jazz.locale localize)
              (jazz.runtime publicize-runtime-reference runtime-class-reference)
              (jazz.system.access get-application)
              (jazz.ui find-actions set-action-enabled?)
              (jazz.ui.action.Action Action)
              (jazz.ui.action.Action-Item Action-Item)
              (jazz.ui.action.Actions Actions)
              (jazz.ui.action.Shortcut Shortcut)
              (jazz.ui.clipboard get-jazz-parcels)
              (jazz.ui.literals construct-action construct-shortcut)
              (jazz.ui.menu.Context-Menu Context-Menu)
              (jazz.ui.menu.Label-Item Label-Item)
              (jazz.ui.menu.Menu (Menu~Class get-class-form) (Menu~Class get-class-forms) (Menu~Class set-class-form))
              (jazz.ui.menu.Separator-Item Separator-Item)
              (jazz.ui.tree.Tree-Data Tree-Data (Tree-Data set-background))
              (jazz.ui.tree.Tree-Data-View Tree-Data-View)
              (jazz.ui.tree.grid Data-Provider Grid-Controller Grid-Tree-Column Grid-Tree-Widget (Grid-Tree-Widget~Class get-class-form) (Grid-Tree-Widget~Class get-class-forms) (Grid-Tree-Widget~Class set-class-form) Provider-Data call-with-row/column-data)
              (jazz.ui.view.View (View destroy) (View set-background) (View~Class host-size))
              (scheme.language.runtime.kernel + = > append apply car cdr cons eq? equal? for-each length list list->table map memq not null? string->symbol string=?)
              (scheme.syntax declaration-path)))
