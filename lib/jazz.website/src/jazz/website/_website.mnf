(manifest jazz.website

  (version 207012)
  (digest "bbf9d8650509d3f55d0115796d579dcc827a6f0d")
  (references (jazz.dialect.classes.foundation Any Export-Declaration Export-Syntax-Declaration Function-Type (Function-Type get-result) (Lexical-Binding get-name) Macro-Declaration Module-Declaration Syntax-Declaration Unit-Declaration resolve-binding)
              (jazz.dialect.classes.jazz Class-Declaration Definition-Declaration Generic-Declaration Interface-Declaration Method-Declaration (Method-Declaration get-propagation) Property-Declaration Slot-Declaration (Slot-Declaration get-getter-name) (Slot-Declaration get-setter-name))
              (jazz.dialect.classes.scheme Define-Declaration Define-Macro-Declaration)
              (jazz.foreign.syntax C-Definition-Declaration C-Named-Declare-Declaration C-Type-Declaration)
              (jazz.io path-settings)
              (jazz.jml load-jml transform-jml)
              (jazz.jml.model.JML-Text JML-Text (JML-Text get-text))
              (jazz.jml.preference.JML-Preferences JML-Preferences)
              (jazz.jml.xhtml.XHTML-Renderer XHTML-Renderer (XHTML-Renderer render))
              (jazz.language.runtime.debug debug)
              (jazz.language.runtime.exception error)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional (Sequence sequence-cardinality) (Sequence sequence-element) cardinality category-identifier collect collect-if ends-with? ends-with?stringstring first is-not? memq? remove-empty reverse! second sort split third upcase)
              (jazz.language.runtime.kernel class-of enqueue is? load-build make-parameter new new-queue outline-unit queue-list split-reference type->specifier)
              (jazz.language.runtime.object (Object object-upcase))
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.increase increase!)
              (jazz.language.syntax.macros unless when)
              (jazz.language.syntax.typecase typecase)
              (jazz.library.component parse-form print-form-data)
              (jazz.system user-feedback user-message)
              (jazz.website.server.JazzScheme-Server JazzScheme-Server)
              (jazz.website.server.JazzScheme-Site JazzScheme-Site)
              (jazz.website.transformation.JazzWebsite-Transformation JazzWebsite-Transformation)
              (scheme.language.runtime.kernel + = > >= apply call-with-output-file car cdddr cddr cdr compose-reference cons display eq? equal? for-each get-output-string length list make-string make-table map not null? open-output-string string<? symbol->string symbol? table-ref table-set!)))
