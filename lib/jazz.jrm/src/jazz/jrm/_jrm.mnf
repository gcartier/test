(manifest jazz.jrm

  (version 207012)
  (digest "6661684b585b784e05d190c2c94be853f9e18e42")
  (references (jazz.jrm.protocol Communication-Exception Remote-Connection-Broke code-string->32-bit-integer read-data read-header throw-remote-connection-broke with-communication write-data write-header)
              (jazz.jrm.register.Register Register)
              (jazz.jrm.register.stub Register-Stub)
              (jazz.jrm.remote.IOR IOR)
              (jazz.jrm.remote.Local-Proxy Local-Proxy)
              (jazz.jrm.remote.Proxy Proxy)
              (jazz.jrm.remote.Remotable-Stub Remotable-Stub)
              (jazz.jrm.remote.Remote-Listener Remote-Listener)
              (jazz.jrm.remote.Remote-Proxy Remote-Proxy)
              (jazz.jrm.remote.Stub-Interface Stub-Interface)
              (jazz.language.runtime.exception call-with-catch error throw)
              (jazz.language.runtime.functional neq? new-thread serialize-object)
              (jazz.language.runtime.kernel class-of close-port continuation-capture continuation-return current-systime current-thread deserialize-runtime-reference dispatch display-continuation-backtrace display-exception eof-object exception-reason force-output input-port-timeout-set! is? load-unit make-mutex make-parameter mutex-lock! mutex-unlock! new object->serial object? open-tcp-client output-port-timeout-set! resolve-runtime-reference seconds->systime serial->object serialize-runtime-reference systime->seconds table-clear terminal thread-mailbox-extract-and-rewind thread-mailbox-next thread-receive thread-send thread-start! thread? unspecified with-exception-catcher with-exception-filter with-exception-handler)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros catch unless when)
              (jazz.library.literals construct-version)
              (jazz.network command-host/service localhost make-uuid uuid=?)
              (jazz.network.host.TCP-Server (TCP-Server start) (TCP-Server wait-started))
              (jazz.version Version)
              (scheme.language.runtime.kernel + > apply car cdr cons dynamic-wind eof-object? eq? equal? eqv? list make-table map not pair? table-for-each table-ref table-set! values vector vector-ref)))
