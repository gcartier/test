(manifest jazz.debugger.jazz.Swank-Debugger

  (version 207012)
  (digest "343cb57345c25d2956b37a42603e6518331c45b8")
  (references (jazz.console get-console-manager get-console-text-manager)
              (jazz.debugger get-debugger-manager register-debugger-resource)
              (jazz.debugger.debugged.Debugged-Process Debugged-Process)
              (jazz.debugger.debugged.Debugged-Stop Debugged-Stop)
              (jazz.debugger.debugged.Debugged-Thread Debugged-Thread)
              (jazz.debugger.debugger.Debugger Debugger (Debugger break-thread) (Debugger continue-stop) (Debugger detach-processes) (Debugger determine-process-child?) (Debugger determine-process-information?) (Debugger determine-process-processes) (Debugger determine-process-properties) (Debugger determine-process-property) (Debugger evaluate-expressions) (Debugger frame-hidden?) (Debugger frame-interpreted?) (Debugger frame-location) (Debugger frame-name) (Debugger frame-variables) (Debugger frame=?) (Debugger get-processes) (Debugger inspect-serial) (Debugger present-process) (Debugger present-serial) (Debugger process-detach) (Debugger process-exit) (Debugger process-focusable?) (Debugger process-icon) (Debugger process-live?) (Debugger process-threads) (Debugger process-title) (Debugger process=?) (Debugger reload-process) (Debugger restart-message) (Debugger restart-name) (Debugger restart-stop) (Debugger restart=?) (Debugger set-repl-frame) (Debugger standard-process-image) (Debugger start-debugger) (Debugger step-stop) (Debugger stop-debugger) (Debugger stop-detail) (Debugger stop-frames) (Debugger stop-kind) (Debugger stop-location) (Debugger stop-reason) (Debugger stop-restarts) (Debugger stop=?) (Debugger terminate-thread) (Debugger thread-active-stop) (Debugger thread-debugged-continuation?) (Debugger thread-name) (Debugger thread-state) (Debugger thread-stops) (Debugger thread=?) (Debugger try-out) (Debugger validate-processes))
              (jazz.debugger.debugger.Debugger-Resource Debugger-Resource)
              (jazz.debugger.jazz.Swank-Process Swank-Process (Swank-Process set-console) (Swank-Process set-package-name) (Swank-Process set-process-id) (Swank-Process set-title))
              (jazz.debugger.jazz.Swank-Restart Swank-Restart)
              (jazz.debugger.jazz.Swank-Stop Swank-Stop)
              (jazz.debugger.jazz.Swank-Thread Swank-Thread)
              (jazz.editor.jazz.inspector package-info)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional ->string Object-Class (Sequence sequence-cardinality) (Sequence sequence-last) append! cardinality collect collect-if find-if getf last member? naturals new-thread read-string-element remove!)
              (jazz.language.runtime.kernel close-port force-output input-port-timeout-set! new open-string-pipe open-tcp-client read-substring thread-start! unimplemented unspecified)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros unless when)
              (jazz.library.literals construct-image-resource)
              (jazz.library.resource.Image-Resource Image-Resource)
              (jazz.ui.window.platform.independant call-event execute-event)
              (scheme.language.runtime.kernel = > append caddr cadr car cdr cons display eof-object? eq? length list make-string map memv not null? read string->number)))
