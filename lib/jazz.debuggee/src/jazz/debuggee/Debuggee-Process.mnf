(manifest jazz.debuggee.Debuggee-Process

  (version 207012)
  (digest "1fb29c08aa1df620b795a10f42933e591a9729fb")
  (references (jazz.debuggee attach-debuggee-to-controller close-thread-console current-repl-level debugged-continuations-thread-group detach-from-controller display-prompt eval-count get-controller-debugger get-local-process hook-evaluate ready-to-controller select-console start-repl-thread thread-console-pump-port transmit-information)
              (jazz.debuggee.Debuggee-Thread Debuggee-Thread)
              (jazz.debuggee.stub Debuggee-Thread-Local-Proxy)
              (jazz.dialect.classes.foundation Walk-Problems)
              (jazz.editor.jazz.inspector inspect-value)
              (jazz.io make-filename path-settings)
              (jazz.jrm remote-proxy?)
              (jazz.language.runtime.debug break get-console-port get-procedure-name)
              (jazz.language.runtime.exception call-with-catch error invoke-restart throw)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional Object-Class (Sequence sequence-element) exit-thread first memq? primordial-thread second thread-call thread-loop? thread-post top-threads)
              (jazz.language.runtime.kernel close-port compile-file compile-options compiler-present? continuation-graft-no-winding continuation-return continuation? current-process-icon current-process-present current-process-traits current-thread delay-reporting? deserialize-runtime-reference enqueue exception-detail exit find-unit-src force-output generate-symbol-context generate-symbol-counter generate-symbol-for inactive-thread-exception? jazz-readtable kernel-source-access? load-file load-unit make-thread new new-queue outline-unit path->container-override queue-list read-source-all requested-unit-name require-service resolve-runtime-reference resource-pathname scheme-readtable serial->object specified? subtype? thread-interrupt! thread-start! thread-terminate! unspecified walk-for with-exception-filter with-jazz-readtable with-readtable)
              (jazz.language.runtime.object Object)
              (jazz.language.syntax.assertion assert)
              (jazz.language.syntax.bind bind)
              (jazz.language.syntax.macros catch unless when)
              (jazz.library.component.Component Component)
              (jazz.platform.glfw get-temporary-file)
              (jazz.runtime product-units)
              (jazz.snapshot new-safe-thread)
              (jazz.system find-setting)
              (jazz.system.access get-application get-process)
              (jazz.ui.window.platform.independant delay-event)
              (profiler active-profile find-selected-profile get-profile-names get-selected-profile profile-calls profile-calls-count profile-calls-duration profile-depth profile-frames-count profile-frames-duration profile-label profile-process-info profile-profiler profiler-type reset-profile reset-profiles set-selected-profile start-profiler stop-profiler)
              (scheme.language.runtime.kernel + cadr call-with-input-string call-with-output-file call-with-values car cdr cons display eq? equal? eval for-each get-output-string iterate-table list make-string make-table map newline not open-output-string pair? source-code symbol? table->list table-ref table-set! values)))
