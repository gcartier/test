(manifest jazz.debugger.debugger.Debugger-Manager

  (version 207012)
  (digest "69bb25dea7a952da0c0d7294f0f4e989f8a53a7e")
  (references (jazz.debuggee get-local-process)
              (jazz.debugger cleanup-process-configurations close-process-debugger-resources debugged-hash debugged=? get-debuggers get-exception-view get-frames-view get-processes-view get-restarts-view get-threads-view get-variables-view register-debugger-cookie with-jrm-exception-handler)
              (jazz.debugger.debugged.Debugged-Process Debugged-Process (Debugged-Process live?))
              (jazz.debugger.debugger.Location-Indicator Location-Indicator)
              (jazz.graphic.Color Color)
              (jazz.graphic.literals construct-color)
              (jazz.ide.application.IDE-Status IDE-Status (IDE-Status update-focused-process))
              (jazz.jrm get-local-register)
              (jazz.jrm.remote.Local-Proxy Local-Proxy)
              (jazz.language.runtime.exception Cancel-Signal call-with-catch signal-cancel)
              (jazz.language.runtime.format format)
              (jazz.language.runtime.functional /= Object-Class (Sequence sequence-element) collect-if difference first intersection memq? neq? remove! some? starts-with? starts-with?stringstring table-add table-keys union)
              (jazz.language.runtime.kernel class-of continuation-capture continuation-return dispatch enqueue is? new new-queue not-null? queue-list table-clear table-length)
              (jazz.language.runtime.object Object (Object initialize))
              (jazz.language.syntax.macros catch constant unless when ~)
              (jazz.media.platform.glfw error-sound)
              (jazz.project ignore-outlines?)
              (jazz.system find-setting get-preferences)
              (jazz.system.access get-application)
              (jazz.ui.view ensure-unzoomed message-box)
              (jazz.ui.view.Splitter-View Splitter-View (Splitter-View brother-view) (Splitter-View zoom))
              (scheme.language.runtime.kernel = > apply eq? for-each length make-table map not symbol->string symbol? table-ref table-set!)))
